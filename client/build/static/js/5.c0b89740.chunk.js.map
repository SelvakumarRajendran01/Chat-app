{"version":3,"sources":["components/ImageFromBuffer/index.js","components/ChatSnippet/index.js","components/SearchBar/index.js","components/AddUser/index.js","components/StartConversationDrawer/index.js","components/SidebarDropdown/index.js","components/ProfileDrawer/index.js","utils/day.js","components/SideBar/index.js","components/ChatRoom/index.js","components/Notification/index.js","components/Intro/index.js","containers/Home/index.js","api/authApi.js","store/actions/userAction.js","api/usersApi.js","api/Api.js","utils/socketUtils.js","store/actions/roomAction.js","utils/theme.js"],"names":["ImageFromBuffer","props","contentType","arrayBuffer","containerProps","otherProps","base64String","btoa","Uint8Array","reduce","data","byte","String","fromCharCode","React","createElement","Fragment","Object","assign","src","ChatSnippet","name","profileImage","lastMessage","timeStamp","isSelected","style","time","isHovering","setIsHovering","useState","theme","useTheme","background","text","Date","palette","className","chatListBackgroundHover","onMouseEnter","e","onMouseLeave","AccountCircleIcon","height","width","SearchBar","_ref","searchInput","setSearchInput","placeHolder","isSearchFocus","setIsSearchFocus","arrowController","useAnimation","inputController","icon","useEffect","rotateArrow90","async","start","borderRadius","rotate","resetArrow","opacity","transition","duration","searchContainerBackground","motion","span","animate","ArrowDownward","color","arrowIconColor","cursor","onClick","initial","SearchIcon","iconColor","input","searchInputBackground","placeholder","value","onFocus","onChange","target","onBlur","AddUser","isSearchByName","setIsSearchByName","emailInput","setEmailInpuit","dispatch","useDispatch","searchedUsers","id","userId","friendList","email","isSearchingUsers","useSelector","state","user","getUsersByName","setSearchByNameInput","Modal","Header","closeButton","Button","variant","Body","overflow","position","borderTopColor","buttonBackground","ListGroup","Array","isArray","map","otherUserId","_id","displayName","disabled","handleAddUserToRoom","createRoomAndJoinSocket","display","flexDirection","alignContent","justifyContent","otherUserEmail","getUserIdByEmail","Swal","fire","err","findAndAddUserByEmail","StartConversationDrawer","openDrawer","handleCloseDrawer","chatRooms","status","drawerControl","activeIndex","setActiveIndex","hoverIndex","setHoverIndex","x","drawerOpeningSequence","drawerClosingSequence","div","siderBarChatListBackground","headerColorLight","ArrowBackIcon","room","index","chats","length","otherUserInfo","users","match","RegExp","Item","handleCurrentRoomChange","roomId","preventDefault","setCurrentRoom","SidebarDropdown","isOpen","dropDownController","history","useHistory","dropDownOpenAnm","dropDownCloseAnm","scale","logOut","signOut","push","InputBox","label","handleSubmit","isDisable","showNoOfCharLeft","maxChar","currentValue","setCurrentValue","isActive","setIsActive","inputRef","useRef","current","focus","borderBottom","headerDarkBackground","readOnly","ref","maxLength","CheckIcon","PencilIcon","ProfileDrawer","profileImageHover","setProfileImageHover","profileImageClickPos","setProfileImageClickPos","profileImageContainerController","formController","menuRef","menuControl","picFile","setPicFile","currentProfileImage","setCurrentProfileImage","hiddenFileInputRef","set","openMenuAnm","closeMenuAnm","checkClickOutsideBox","contains","document","addEventListener","onUnmount","removeEventListener","y","type","accept","files","reader","FileReader","file","imageObject","onload","result","readAsArrayBuffer","formData","FormData","append","updateUserAsync","profileDrawerBackground","currentTarget","getBoundingClientRect","clientX","clientY","getMouseClickPos","uploadPicOverlayBackground","CameraIcon","alignSelf","left","top","menuHeight","menuWidth","click","removeProfileImage","getDayString","0","1","2","3","4","5","6","dayGap","date","getDay","getDate","getMonth","getYear","SideBar","isAddUserModalOpen","setIsAddUserModalOpen","isConvoDrawerOpen","setIsConvoDrawerOpen","isProfileDrawerOpen","setIsProfileDrawerOpen","isSidebarDropdownOpen","setIsSidebarDropdownOpen","addedUserNumber","setAddedUserNumber","isAddButtonHovering","setIsAddButtonHovering","dropDownRef","activeChatRoomId","currentChatRoomId","console","log","counter","i","show","onHide","size","centered","ConvoDrawer","headerBackground","addedUserIconNumber","MessageIcon","MenuIcon","showRoomsWithChat","RoomComponents","forEach","diffTime","Math","abs","diffDays","ceil","currentDay","getHours","getMinutes","chatListBackgroundActive","buttonBackgroundHover","inverseStrong","ChatRoom","backgroundColor","textColor","headerIconColor","hederIconColor","textInput","setTextInput","currentRoomId","numberOfChats","setNumberOfChats","currentRoom","find","bottomDivRef","scrollIntoView","ImageWithBuffer","primaryStrong","backgroundImage","showChats","previousDay","chat","day","showDay","prevDay","systemMessageBackground","sender","outGoingBackground","key","incommingBackground","SmileyIcon","AttatchFileIcon","onKeyPress","stopPropagation","nativeEvent","stopImmediatePropagation","repeat","addChatToRoom","sendMessageSocket","MicIcon","displayAnmTimeOutId","statusAnmTimeOutId","NotificationBox","children","undo","showUndoButton","showClearButton","handleClear","notificationBackground","notificationHighlight","ClearIcon","NotificationContainer","updatingDisplayName","updatingStatus","updatingPhoto","updatedDisplayName","setUpdatedDisplayName","updatedStatus","setUpdatedStatus","updatedPhoto","setUpdatedPhoto","firstRender","firstRender2","firstRender3","photoNotificationController","displayNameNotificationController","statusNotificationController","isDisplayNameUndoing","setIsDisplayNameUndoing","isStatusUndoing","setIsStatusUndoing","useLayoutEffect","clearInterval","setTimeout","notificationBoxCloseAnm","notificationBoxOpenAnm","whichNotification","undoUserUpdateAsync","Intro","borderStronger","borderIntro","border","img","marginBottom","marginTop","LaptopWindowsIcon","marginRight","marginLeft","Home","currentTheme","system","currentChatRoom","getUserDetail","justJoinRoom","updateUserById","socketId","socket","emit","appliedTheme","createMuiTheme","getTheme","lightTheme","darkTheme","ThemeProvider","outerBackground","outerBackgroundImage","bannerBackground","innerBackground","boxShadow","outerBoxShadow","NotificationContiner","PostRequest","url","Promise","resolve","reject","obj","onSuccess","resp","onError","Api","arrayToMap","arr","ele","createAction","payLoad","signUpAsync","getState","isSigningUp","actionTypes","sessionStorage","accessToken","expires","path","errors","response","emailErrors","displayNameErrors","passwordErrors","error","errorMsg","msg","split","shift","join","signInAsync","password","searchString","usersApi","remove","lastSeen","accountCreatedAt","propToUpdate","newUser","prevStatus","prevDisplayName","propsToUndo","clearSignUpErrors","clearSignInErrors","GetRequest","GetWithCancel","PutRequest","Cookies","getAuthToken","get","axios","Create","baseURL","getWithCancel","success","window","source","cancel","CancelToken","_axios","mathod","responseType","cancelToken","token","headers","authorization","deleteApi","post","reqData","method","signUp","put","io","on","store","getNewChatFromSocket","user2Id","newChat","cameraIconColor"],"mappings":"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","file":"static/js/5.c0b89740.chunk.js","sourcesContent":["import React from \"react\";\n\n\nconst ImageFromBuffer = props => {\n    const {contentType, arrayBuffer,containerProps, ...otherProps} = props;\n\n    const base64String = btoa(\n        new Uint8Array(arrayBuffer)\n          .reduce((data, byte) => data + String.fromCharCode(byte), '')\n      );\n      \n    return (\n        <>\n          <img {...otherProps} src={`data:${contentType};base64,${base64String}`}></img>      \n        </>\n    );\n}\n\nexport default ImageFromBuffer; ","import React, { useState } from \"react\";\nimport { useTheme } from \"@material-ui/core\";\nimport ImageFromBuffer from \"../ImageFromBuffer\";\nimport { AccountCircle as AccountCircleIcon } from \"@material-ui/icons\";\nimport \"./style.css\";\n\nconst ChatSnippet = (props) => {\n  const {\n    name,\n    profileImage,\n    lastMessage,\n    timeStamp,\n    isSelected,\n    style,\n    time,\n    ...otherProps\n  } = props;\n  const [isHovering, setIsHovering] = useState(false);\n  const theme = useTheme();\n  const date = new Date(time);\n  const { background,text } = theme.palette;\n  return (\n    <div\n      className=\"chatSnippet\"\n      style={\n        isHovering\n          ? { background: background.chatListBackgroundHover, ...style }\n          : { ...style }\n      }\n      {...otherProps}\n      onMouseEnter={(e) => setIsHovering(true)}\n      onMouseLeave={(e) => setIsHovering(false)}\n    >\n      {profileImage.contentType ? (\n        <ImageFromBuffer\n          className=\"chatSnippet__image\"\n          contentType={profileImage.contentType}\n          arrayBuffer={profileImage.data.data}\n        />\n      ) : (\n        <AccountCircleIcon  style={{height:\"50px\", width:\"50px\"}} />\n      )}\n      <div className=\"chatSnippet__body\">\n        <span className=\"chatSnippet__body__name\">{name}</span>\n        <span className=\"chatSnippet__body__lm\">{lastMessage}</span>\n        <span className=\"chatSnippet__body__time\">{time}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatSnippet;\n","import \"./style.scss\";\nimport React, {useEffect,useState} from \"react\";\nimport {useTheme} from \"@material-ui/core\";\nimport {motion, useAnimation} from \"framer-motion\";\nimport {ArrowDownward,Search as SearchIcon} from \"@material-ui/icons\";\n\nconst SearchBar = ({searchInput,setSearchInput,placeHolder}) => {\n    const [isSearchFocus, setIsSearchFocus] = useState(false);\n    \n    const arrowController = useAnimation();\n    const inputController = useAnimation();\n    const theme = useTheme();\n\n    const {background,icon} = theme.palette;\n  useEffect(() => {\n    if (isSearchFocus) {\n      rotateArrow90();\n    }\n  }, [isSearchFocus]);\n\n  const rotateArrow90 = async () => {\n    inputController.start({ width: \"100%\", height: \"95%\",borderRadius:\"0px\" });\n    await arrowController.start({ rotate: 90 });\n  };\n\n  const resetArrow = async () => {\n    inputController.start({ height: \"70%\", width: \"95%\",borderRadius:\"18px\" });\n    return await arrowController.start({\n      rotate: 0,\n      opacity: 0.5,\n      transition: { duration: 0.2 },\n    });\n  };\n\n    return ( <div\n        className=\"sidebar__search-input-wrapper\"\n        style={{ background: background.searchContainerBackground }}\n      >\n        {isSearchFocus ? (\n          <motion.span\n            animate={arrowController}\n            className=\"sidebar__search-input-wrapper__iconWrapper\"\n          >\n            <ArrowDownward\n              className=\"sidebar__search-input-wrapper__arrow\"\n              style={{ color: icon.arrowIconColor, cursor: \"pointer\" }}\n              onClick={async (e) => {\n                await resetArrow();\n                setSearchInput(\"\");\n                setIsSearchFocus(false);\n              }}\n            />\n          </motion.span>\n        ) : (\n          <motion.span\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            className=\"sidebar__search-input-wrapper__iconWrapper\"\n          >\n            <SearchIcon\n              style={{ color: icon.iconColor, cursor: \"pointer\" }}\n            />\n          </motion.span>\n        )}\n        <motion.input\n          className=\"sidebar__search-input\"\n          style={{ background: background.searchInputBackground }}\n          placeholder={!isSearchFocus ? placeHolder : \"\"}\n          value={searchInput}\n          onFocus={(e) => setIsSearchFocus(true)}\n          onChange={(e) => setSearchInput(e.target.value)}\n          animate={inputController}\n          onBlur={async (e) => {\n            if (!searchInput) {\n              await resetArrow();\n              setIsSearchFocus(false);\n            }\n          }}\n        ></motion.input>\n      </div>);\n}\n\nexport default SearchBar;","import React, { useState, useEffect } from \"react\";\nimport { Modal, Button, ListGroup } from \"react-bootstrap\";\nimport { useTheme } from \"@material-ui/core\";\nimport { Search as SearchIcon } from \"@material-ui/icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getUsersByName,\n  addUserToRoom,\n} from \"../../store/actions/userAction.js\";\nimport ImageFromBuffer from \"../ImageFromBuffer\";\nimport \"./style.scss\";\nimport { createRoomAndJoinSocket } from \"../../utils/socketUtils.js\";\nimport SearchBar from \"../SearchBar\";\nimport {getUserIdByEmail} from \"../../api/usersApi.js\";\nimport Swal from \"sweetalert2\";\n\nconst AddUser = (props) => {\n  const [isSearchByName, setIsSearchByName] = useState(true);\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [emailInput,setEmailInpuit] = useState('');\n  const dispatch = useDispatch();\n  const { searchedUsers, id: userId, friendList,email,isSearchingUsers } = useSelector(\n    (state) => state.user\n  );\n  const theme = useTheme();\n\n  useEffect(() => {\n    dispatch(getUsersByName());\n  }, []);\n\n  const { background, text } = theme.palette;\n\n  const setSearchByNameInput = (value) => {\n    setSearchInput(value);\n    dispatch(getUsersByName(value));\n  };\n\n  const handleAddUserToRoom = (e, otherUserId) => {\n    createRoomAndJoinSocket(userId, otherUserId);\n  };\n\n  const findAndAddUserByEmail = async (otherUserEmail) => {\n  if(email === otherUserEmail)\n    {\n      return;\n    }\n  try{\n    const {userId:otherUserId} = await getUserIdByEmail(otherUserEmail);\n    createRoomAndJoinSocket(userId,otherUserId);\n    Swal.fire('Friend request sent.')\n  }\n  catch(err)\n    {\n     Swal.fire(\"User not found.\");\n    }\n  }\n  const searchByName = () => {\n    return (\n      <>\n        <SearchBar\n          searchInput={searchInput}\n          setSearchInput={setSearchByNameInput}\n          placeHolder={\"Search for user by name\"}\n        />\n        {isSearchingUsers ?  <div className=\"addUser__loader\" style={{borderTopColor:background.buttonBackground}}/> : <></>}\n       {isSearchingUsers || <ListGroup>\n          {Array.isArray(searchedUsers) && searchedUsers.map((user) => {\n            const otherUserId = user._id;\n            if (userId === otherUserId) {\n              return <></>;\n            }\n            return (\n              <div className=\"addUser__users-list\">\n                <ImageFromBuffer\n                  arrayBuffer={user.profileImage.data.data}\n                  contentType={user.profileImage.contentType}\n                  className=\"addUser__users-list__img\"\n                />\n                <h5 className=\"addUser__users-list__name\">\n                  {user.displayName}\n                </h5>\n                <Button\n                  className=\"addUser__users-list__button\"\n                  variant={friendList[otherUserId] ? \"secondary\" : \"success\"}\n                  disabled={friendList[otherUserId]}\n                  onClick={(e) => handleAddUserToRoom(e, user._id)}\n                >\n                  {friendList[otherUserId] ? \"added\" : \"add\"}\n                </Button>\n              </div>\n            );\n          })}\n        </ListGroup>}\n      </>\n    );\n  };\n  const addByEmail = () => {\n    return (\n      <div style={{display:\"flex\", flexDirection:\"column\",alignContent:\"center\", justifyContent:\"flex-start\"}}>\n        <SearchBar searchInput={emailInput} setSearchInput={setEmailInpuit} placeHolder={\"Add user by email\"}/>\n        <Button onClick={e => findAndAddUserByEmail(emailInput)} style={{display:\"inline\"}} >Add user by email</Button>\n      </div>\n    );\n  };\n  return (\n    <>\n      <Modal.Header closeButton className=\"addUser\">\n        <Button className=\"mr-2\" onClick={(e) => setIsSearchByName(true)} variant={isSearchByName ? \"primary\" : \"secondary\"}>\n          Search By Name\n        </Button>\n        <Button variant={isSearchByName ?  \"secondary\" :  \"primary\"} onClick={(e) => setIsSearchByName(false)}>\n          Add By Email\n        </Button>\n      </Modal.Header>\n      <Modal.Body style={{ height: \"500px\", overflow: \"auto\",position:\"relative\" }}>\n        {isSearchByName ? searchByName() : addByEmail()}\n      </Modal.Body>\n    </>\n  );\n};\n\nexport default AddUser;\n","import React, {useState, useEffect } from \"react\";\nimport { motion, useAnimation } from \"framer-motion\";\nimport { useSelector,useDispatch } from \"react-redux\";\nimport {setCurrentRoom} from \"../../store/actions/roomAction\";\nimport { useTheme } from \"@material-ui/core\";\nimport SearchBar from \"../SearchBar\";\nimport { AccountCircle as AccountCircleIcon } from \"@material-ui/icons\";\nimport \"./style.scss\";\nimport {\n  ArrowBack as ArrowBackIcon,\n  Search as SearchIcon,\n} from \"@material-ui/icons\";\nimport ImageFromBuffer from \"../ImageFromBuffer\";\nimport { ListGroup } from \"react-bootstrap\";\n\nconst StartConversationDrawer = (props) => {\n  const { openDrawer, handleCloseDrawer } = props;\n  const { chatRooms, id,status } = useSelector((state) => state.user);\n  const drawerControl = useAnimation();\n  const [activeIndex,setActiveIndex] = useState(-1);\n  const [hoverIndex,setHoverIndex ] = useState(-1);  \n  const dispatch = useDispatch();\n  const theme = useTheme();\n  const [searchInput, setSearchInput] = useState('');\n  const { background, text } = theme.palette;\n  const drawerOpeningSequence = async () => {\n    await drawerControl.start({ x: 0, transition: { duration: \"0.5\" } });\n  };\n  const drawerClosingSequence = async () => {\n    await drawerControl.start({ x: -1000, transition: { duration: \"0.5\" } });\n  };\n  useEffect(() => {\n    if (openDrawer) {\n      drawerOpeningSequence();\n      return;\n    }\n    drawerClosingSequence();\n  }, [openDrawer]);\n  \n  const handleCurrentRoomChange = (e, roomId) => {\n    e.preventDefault();\n    dispatch(setCurrentRoom(roomId));\n    handleCloseDrawer();\n  }\n\n  const showInactiveChatRooms = () => {\n \n    const inactiveRoomsComponents = chatRooms.map((room,index) => {\n      if(!room.chats)\n        {\n          return <></> ;\n        }\n      if (room.chats.length === 0) {\n        const otherUserInfo =\n          id === room.users[0]._id ? room.users[1] : room.users[0];\n          if (\n            searchInput &&\n            !otherUserInfo.displayName.match(new RegExp(`${searchInput}`, \"i\"))\n          ) {\n            return <></>;\n          }\n        return (\n          <ListGroup.Item className=\"startConversationDrawer__body__user-info-wrapper\" onClick={e => handleCurrentRoomChange(e, room._id)} style={hoverIndex === index ? {\n            background:background.chatListBackgroundHover,\n          } : {} } onMouseEnter={e => setHoverIndex(index)} onMouseLeave={e => setHoverIndex(-1)}>\n            <div className=\"startConversationDrawer__body__user-info\" >\n             {otherUserInfo.profileImage.contentType ? <ImageFromBuffer\n                className=\"profileImage\"\n                arrayBuffer={otherUserInfo.profileImage.data.data}\n                contentType={otherUserInfo.profileImage.contentType}\n              /> : <AccountCircleIcon  style={{height:\"50px\", width:\"50px\"}} /> }\n              <div className=\"startConversationDrawer__body__user-info__name-and-status\" >\n                  <h5>{otherUserInfo.displayName}</h5>\n                  <p>{status}</p>\n              </div>\n            </div>\n          </ListGroup.Item>\n        );\n      }\n      return <></>;\n    });\n    return inactiveRoomsComponents;\n  };\n  return (\n    <motion.div\n      className=\"startConversationDrawer\"\n      animate={drawerControl}\n      initial={{ x: -1000 }}\n      style={{ background: background.siderBarChatListBackground }}\n    >\n      <div\n        className=\"startConversationDrawer__header\"\n        style={{\n          background: background.headerColorLight,\n          color: background.siderBarChatListBackground,\n        }}\n      >\n        <ArrowBackIcon onClick={(e) => handleCloseDrawer()} />\n        <h4>New chat</h4>\n      </div>\n      <div className=\"startConversationDrawer__body\">\n       <SearchBar searchInput={searchInput} setSearchInput={setSearchInput} placeHolder={\"Search user..\"}/>\n        <div className=\"startConversationDrawer__body__chatList\">\n          <ListGroup>{showInactiveChatRooms()}</ListGroup>\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default StartConversationDrawer;\n","import React, { useEffect } from \"react\";\nimport {motion,useAnimation} from \"framer-motion\";\nimport { useTheme } from \"@material-ui/core\";\nimport {useDispatch} from \"react-redux\";\nimport {signOut} from \"../../store/actions/userAction\"; \nimport {useHistory} from \"react-router-dom\";\nimport \"./style.scss\";\n\nconst SidebarDropdown = props => {\n    const {isOpen, ...otherProps} = props;\n    const theme = useTheme();\n    const { background, icon } = theme.palette;\n    const dropDownController = useAnimation(); \n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const logOut = () => {\n        dispatch(signOut());\n        history.push(\"/signinsignup\");\n    }\n\n    useEffect(() => {\n        if(isOpen)\n            {\n                dropDownOpenAnm();\n                return;\n            }\n            dropDownCloseAnm();\n    },[isOpen]);\n\n\n    const dropDownOpenAnm = async () => {\n        await dropDownController.start({opacity:1,scale:1});\n    }\n\n    const dropDownCloseAnm = async () => {\n        await dropDownController.start({opacity:0,scale:0});\n    }\n    return (\n    <motion.div initial={{scale:0,opacity:0}} animate={dropDownController} className=\"SidebarDropdown__container\" style={{background:background.siderBarChatListBackground}} {...otherProps}>\n        <span className=\"SidebarDropdown__container__item\">Settings</span>\n        <span className=\"SidebarDropdown__container__item\" onClick={logOut}>Log out</span>\n    </motion.div>);\n}\n\nexport default SidebarDropdown;","import React, { useState, useEffect, useRef } from \"react\";\nimport { motion, useAnimation } from \"framer-motion\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useTheme } from \"@material-ui/core\";\nimport \"./style.scss\";\nimport {\n  AccountCircle as AccountCircleIcon,\n  ArrowBack as ArrowBackIcon,\n  CameraAlt as CameraIcon,\n  Create as PencilIcon,\n  Check as CheckIcon,\n} from \"@material-ui/icons\";\nimport { updateUserAsync } from \"../../store/actions/userAction\";\nimport ImageFromBuffer from \"../ImageFromBuffer\";\n\nconst InputBox = (props) => {\n  const { label, handleSubmit, value, isDisable,showNoOfCharLeft,maxChar, ...otherProps } = props;\n  const theme = useTheme();\n  const [currentValue, setCurrentValue] = useState(value);\n  const [isActive, setIsActive] = useState(false);\n  const { background, icon } = theme.palette;\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    isActive && inputRef.current.focus();\n  });\n\n  useEffect(() => {\n    isDisable && setIsActive(false);\n  }, [isDisable]);\n\n  useEffect(() => {\n    setCurrentValue(value);\n  }, [value]);\n\n  return (\n    <div\n      className=\"inputBox\"\n      {...otherProps}\n      style={{\n        ...otherProps.style,\n        background: background.siderBarChatListBackground,\n      }}\n    >\n      <span style={{ color: background.headerColorLight }}>{label}</span>\n      <div\n        className=\"inputBox__outer\"\n        style={\n          isActive\n            ? {\n                borderBottom: `2px solid ${background.headerDarkBackground}`,\n              }\n            : {}\n        }\n      >\n        <input\n          className=\"inputBox__input\"\n          readOnly={!isActive}\n          value={currentValue}\n          onChange={(e) => setCurrentValue(e.target.value)}\n          ref={inputRef}\n          maxLength={maxChar || 120}\n        ></input>\n        \n        {isActive ? (\n          \n          <>\n          {showNoOfCharLeft && <span className=\"inputBox__char-left\">{maxChar - currentValue.length}</span>}\n          <CheckIcon\n            className=\"inputBox__icon\"\n            onClick={(e) => {\n              handleSubmit(currentValue);\n              setIsActive(false);\n            }}\n          />\n          </>\n        ) : (\n          <PencilIcon\n            className=\"inputBox__icon\"\n            onClick={(e) => setIsActive(true)}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst ProfileDrawer = (props) => {\n  const { openDrawer, handleCloseDrawer } = props;\n  const [profileImageHover, setProfileImageHover] = useState(false);\n  const [profileImageClickPos, setProfileImageClickPos] = useState(null);\n  const { profileImage, displayName, status } = useSelector(\n    (state) => state.user\n  );\n  const drawerControl = useAnimation();\n  const profileImageContainerController = useAnimation();\n  const formController = useAnimation();\n  const menuRef = useRef(null);\n  const menuControl = useAnimation();\n  const [picFile, setPicFile] = useState(null);\n  const dispatch = useDispatch();\n  const theme = useTheme();\n  const [currentProfileImage, setCurrentProfileImage] = useState(profileImage);\n  const hiddenFileInputRef = useRef(null);\n  const menuHeight = 90;\n  const menuWidth = 150;\n\n  const { background, icon } = theme.palette;\n\n  const openMenuAnm = async () => {\n    await menuControl.set({ scale: 0, opacity: 0 });\n    await menuControl.start({ scale: 1, opacity: 1 });\n  };\n  const closeMenuAnm = async () => {\n    await menuControl.start({ scale: 0, opacity: 0 });\n  };\n\n  useEffect(() => {\n    profileImageClickPos ? openMenuAnm() : closeMenuAnm();\n  }, [profileImageClickPos]);\n\n  useEffect(() => {\n    const checkClickOutsideBox = (e) => {\n      if (menuRef.current && !menuRef.current.contains(e.target)) {\n        setProfileImageClickPos(null);\n      }\n    };\n\n    document.addEventListener(\"click\", checkClickOutsideBox);\n\n    const onUnmount = () => {\n      document.removeEventListener(\"click\", checkClickOutsideBox);\n    };\n    return onUnmount;\n  }, []);\n\n  const getMouseClickPos = (e) => {\n    const currentTargetRect = e.currentTarget.getBoundingClientRect();\n    return [e.clientX, e.clientY];\n  };\n\n  const drawerOpeningSequence = async () => {\n    await drawerControl.start({ x: 0, transition: { duration: \"0.5\" } });\n    await profileImageContainerController.start({\n      height: \"250px\",\n      width: \"250px\",\n      transition: { duration: \"0.2\" },\n      y: 0,\n    });\n    await formController.start({\n      y: 0,\n      opacity: 1,\n      transition: { duration: \"0.5\" },\n    });\n  };\n  const drawerClosingSequence = async () => {\n    await drawerControl.start({ x: -1000, transition: { duration: \"0.5\" } });\n    profileImageContainerController.start({\n      height: \"0px\",\n      width: \"0px\",\n      y: +125,\n      transition: { duration: 0 },\n    });\n    formController.start({ y: -50, opacity: 0 });\n  };\n  useEffect(() => {\n    if (openDrawer) {\n      drawerOpeningSequence();\n      return;\n    }\n    drawerClosingSequence();\n  }, [openDrawer]);\n\n  const handleImageUpload = e => {\n    if(e.target.files[0])\n      {\n        \n        const reader = new FileReader(); \n        const file = e.target.files[0];\n        const imageObject = {\n          contentType:file.type,\n        };\n        reader.onload = (e) => {\n          const arrayBuffer = e.target.result;\n          imageObject.data = {type:\"Buffer\", data:arrayBuffer}\n          setCurrentProfileImage(imageObject);\n        }\n        reader.readAsArrayBuffer(file)\n        const formData = new FormData();\n        formData.append(\"profileImage\", e.target.files[0]);   \n        dispatch(updateUserAsync(\"photo\",formData));\n      }\n  \n  }\n\n  return (\n    <motion.div\n      className=\"profileDrawer\"\n      animate={drawerControl}\n      initial={{ x: -1000 }}\n    >\n        <input\n                type=\"file\"\n                name=\"profileImageInput\"\n                accept=\"image/*\"\n                style={{display:\"none\"}}\n                ref={hiddenFileInputRef}\n                onChange={handleImageUpload}\n              />\n      <div\n        className=\"profileDrawer__header\"\n        style={{\n          background: background.headerColorLight,\n          color: background.siderBarChatListBackground,\n        }}\n      >\n        <ArrowBackIcon onClick={(e) => handleCloseDrawer()} />\n        <h4>Profile</h4>\n      </div>\n      <div\n        className=\"profileDrawer__body\"\n        style={{ background: background.profileDrawerBackground }}\n      >\n        <motion.div\n          className=\"profileDrawer__body__image-container\"\n          initial={{ height: \"0px\", width: \"0px\" }}\n          animate={profileImageContainerController}\n          onMouseEnter={(e) => setProfileImageHover(true)}\n          onMouseLeave={(e) => setProfileImageHover(false)}\n          onClick={(e) => setProfileImageClickPos(getMouseClickPos(e))}\n          ref={menuRef}\n        >\n          {(!profileImage || profileImageHover || profileImageClickPos) && (\n            <div\n              className=\"profileDrawer__body__image-container__upload-img\"\n              style={{ background: background.uploadPicOverlayBackground }}\n            >\n              <CameraIcon\n                style={{\n                  height: \"25px\",\n                  width: \"25px\",\n                  color: background.siderBarChatListBackground,\n                }}\n              />\n              <div\n                className=\"profileDrawer__body__image-container__upload-img__text\"\n                style={{ color: background.siderBarChatListBackground }}\n              >\n                {!profileImage && (\n                  <>\n                    <span>Add Profile</span>\n                    <span style={{ alignSelf: \"center\" }}>Photo</span>\n                  </>\n                )}\n                {(profileImageHover || profileImageClickPos) && profileImage && (\n                  <>\n                    <span style={{ alignSelf: \"center\" }}>Change</span>\n                    <span style={{ alignSelf: \"center\" }}>Profile Picture</span>\n                  </>\n                )}\n              </div>\n            </div>\n          )}\n\n          {currentProfileImage.contentType ? (\n            <ImageFromBuffer\n              arrayBuffer={currentProfileImage.data.data}\n              contentType={currentProfileImage.contentType}\n              className=\"profileDrawer__body__profileImage\"\n              style={{ cursor: \"pointer\" }}\n            />\n          ) : (\n            <AccountCircleIcon color=\"red\" style={{ cursor: \"pointer\" }} />\n          )}\n        </motion.div>\n        {profileImageClickPos && (\n          <motion.div\n            className=\"profileDrawer__body__image-container__upload-img__menu\"\n            style={{\n              left: profileImageClickPos[0] + \"px\",\n              top: profileImageClickPos[1] + \"px\",\n              height: menuHeight + \"px\",\n              width: menuWidth + \"px\",\n              background: background.siderBarChatListBackground,\n            }}\n            initial={{ opacity: 0, scale: 0 }}\n            animate={menuControl}\n          >\n            <div className=\"pb-2 pt-3 pl-3\" style={{ cursor: \"pointer\" }} onClick = {e => {hiddenFileInputRef.current.click()}}>\n              {\" \"}\n            \n             Upload Photo \n            </div>\n            <div className=\"pb-2 pt-3 pl-3\" style={{ cursor: \"pointer\" }} onClick={e => {\n              dispatch(updateUserAsync(\"photo\",{removeProfileImage:true}));\n              setCurrentProfileImage({contentType:\"\"});\n              }}>\n              Remove Photo\n            </div>\n          </motion.div>\n        )}\n        <motion.div\n          className=\"profileDrawer__body__form\"\n          initial={{ opacity: 0, y: -50 }}\n          animate={formController}\n        >\n          <InputBox\n            label=\"Your Name\"\n            value={displayName}\n            handleSubmit={(value) => {\n              if(value === displayName)\n                {\n                  return;\n                }\n              dispatch(updateUserAsync(\"display-name\", { displayName: value }));\n            }}\n            isDisable={!openDrawer}\n            showNoOfCharLeft \n            maxChar={25}\n          />\n          <InputBox\n            label=\"About\"\n            value={status}\n            handleSubmit={(value) => {\n              if(value === status)\n                {\n                  return;\n                }\n              dispatch(updateUserAsync(\"status\", { status: value }));\n            }}\n            isDisable={!openDrawer}\n          />\n        </motion.div>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default ProfileDrawer;\n","const getDayString = {\n  0: \"Sunday\",\n  1: \"Monday\",\n  2: \"Tuesday\",\n  3: \"Wednesday\",\n  4: \"Thursday\",\n  5: \"Friday\",\n  6: \"Saturday\",\n};\n\nexport default  (dayGap,date) => {\n  const currentDay = new Date().getDay();\n  switch (true) {\n    case dayGap === 1:\n      return \"Today\";\n    case dayGap === 2:\n      return \"Yesterday\";\n    case dayGap >= 3 && dayGap <= 6:\n      return getDayString[date.getDay()];\n    case dayGap > 6:\n      return `${date.getDate()}/${date.getMonth() + 1}/${date.getYear() + 1900} `\n  }\n};\n","import React, { useRef, useEffect, useState } from \"react\";\nimport \"./style.css\";\nimport { useTheme } from \"@material-ui/core\";\nimport {\n  AccountCircle as AccountCircleIcon,\n  Message as MessageIcon,\n  MoreVert as MenuIcon,\n  Search as SearchIcon,\n  ArrowDownward,\n} from \"@material-ui/icons\";\nimport ChatSnippet from \"../ChatSnippet\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport AddUser from \"../AddUser\";\nimport ConvoDrawer from \"../StartConversationDrawer\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setCurrentRoom } from \"../../store/actions/roomAction\";\nimport SidebarDropdown from \"../SidebarDropdown\";\nimport ImageFromBuffer from \"../ImageFromBuffer\";\nimport ProfileDrawer from \"../ProfileDrawer\";\nimport { motion, useAnimation } from \"framer-motion\";\nimport SearchBar from \"../SearchBar\";\nimport getDay from \"../../utils/day.js\";\n\nconst SideBar = (props) => {\n  const [isAddUserModalOpen, setIsAddUserModalOpen] = useState(false);\n  const [isConvoDrawerOpen, setIsConvoDrawerOpen] = useState(false);\n  const [isProfileDrawerOpen, setIsProfileDrawerOpen] = useState(false);\n  const [isSidebarDropdownOpen, setIsSidebarDropdownOpen] = useState(false);\n  const [addedUserNumber, setAddedUserNumber] = useState(0);\n  const [isAddButtonHovering, setIsAddButtonHovering] = useState(false);\n  const dropDownRef = useRef();\n  const [searchInput, setSearchInput] = useState(\"\");\n\n  const theme = useTheme();\n  const dispatch = useDispatch();\n\n\n\n  const { chatRooms, id: userId, profileImage } = useSelector(\n    (state) => state.user\n  );\n\n  const activeChatRoomId = useSelector((state) => state.room.currentChatRoomId);\n\n  useEffect(() => {\n    const checkClickOutsideBox = (e) => {\n      console.log(dropDownRef.current);\n      if (dropDownRef.current && !dropDownRef.current.contains(e.target)) {\n        setIsSidebarDropdownOpen(false);\n      }\n    };\n\n    document.addEventListener(\"click\", checkClickOutsideBox);\n\n    const onUnmount = () => {\n      document.removeEventListener(\"click\", checkClickOutsideBox);\n    };\n    return onUnmount;\n  });\n\n  useEffect(() => {\n    let counter = 0;\n    for (let i = 0; i < chatRooms.length; i++) {\n      if (counter > 100) {\n        break;\n      }\n      if (chatRooms[i].chats.length === 0) {\n        counter++;\n      }\n    }\n    setAddedUserNumber(counter);\n  }, [chatRooms]);\n\n\n  const { background, text, icon } = theme.palette;\n\n  const showRoomsWithChat = () => {\n    let RoomComponents = [];\n    chatRooms.forEach((room, index) => {\n      if (!room.chats) {\n        return <></>;\n      }\n\n      if (room.chats.length !== 0) {\n        const otherUserInfo =\n          room.users[0]._id === userId ? room.users[1] : room.users[0];\n        if (\n          searchInput &&\n          !otherUserInfo.displayName.match(new RegExp(`${searchInput}`, \"i\"))\n        ) {\n          return <></>;\n        }\n        let date = new Date(room.chats[room.chats.length - 1].time);\n        const diffTime = Math.abs(new Date() - date);\n        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n        let currentDay = getDay(diffDays,date);\n        if(currentDay === \"Today\")\n          {\n            currentDay = `${date.getHours()}:${date.getMinutes()}`;\n          }\n        RoomComponents.push(\n          <ChatSnippet\n            name={otherUserInfo.displayName}\n            profileImage={otherUserInfo.profileImage}\n            lastMessage={room.chats[room.chats.length - 1].text}\n            time={currentDay}\n   \n            onClick={(e) => dispatch(setCurrentRoom(room._id))}\n            style={\n              room._id === activeChatRoomId\n                ? { background: background.chatListBackgroundActive }\n                : {}\n            }\n          />\n        );\n      }\n    });\n\n    return RoomComponents;\n  };\n\n  return (\n    <>\n      <Modal\n        show={isAddUserModalOpen}\n        onHide={() => setIsAddUserModalOpen(false)}\n        size=\"lg\"\n        centered\n      >\n        <AddUser />\n      </Modal>\n\n      <div className=\"sideBar\">\n        <ConvoDrawer\n          openDrawer={isConvoDrawerOpen}\n          handleCloseDrawer={(e) => {\n            setIsConvoDrawerOpen(false);\n          }}\n        />\n        <ProfileDrawer\n          openDrawer={isProfileDrawerOpen}\n          handleCloseDrawer={(e) => setIsProfileDrawerOpen(false)}\n        />\n        <div\n          className=\"sideBar__header\"\n          style={{ background: background.headerBackground }}\n        >\n          <div className=\"sideBar__header__left\">\n            {profileImage.contentType ? (\n              <ImageFromBuffer\n                arrayBuffer={profileImage.data.data}\n                contentType={profileImage.contentType}\n                className=\"chatSnippet__image\"\n                style={{ cursor: \"pointer\" }}\n                onClick={(e) => setIsProfileDrawerOpen(true)}\n              />\n            ) : (\n              <AccountCircleIcon\n                style={{ cursor: \"pointer\" }}\n                onClick={(e) => setIsProfileDrawerOpen(true)}\n              />\n            )}\n          </div>\n          <div className=\"sideBar__header__right\">\n            <div className=\"sideBar__header__right__container\">\n              <span\n                className=\"sideBar__header__right__container__num\"\n                style={{ color: icon.addedUserIconNumber }}\n              >\n                {addedUserNumber ? addedUserNumber : \"\"}\n              </span>\n              <MessageIcon\n                style={{ color: icon.iconColor }}\n                onClick={(e) => setIsConvoDrawerOpen(true)}\n              />\n            </div>\n\n            <div className=\"sidebar__menu-icon-wrapper\">\n              <MenuIcon\n                onClick={(e) => setIsSidebarDropdownOpen(true)}\n                ref={dropDownRef}\n                style={{ color: icon.iconColor }}\n              />\n              <SidebarDropdown isOpen={isSidebarDropdownOpen} />\n            </div>\n          </div>\n        </div>\n        <SearchBar searchInput={searchInput} setSearchInput={setSearchInput}  placeHolder={\"Search user..\"} />  \n        <div\n          className=\"sideBar__chats\"\n          style={{ background: background.siderBarChatListBackground }}\n        >\n          {showRoomsWithChat()}\n        </div>\n        <Button\n          className=\"sideBar__add__button\"\n          onClick={(e) => setIsAddUserModalOpen(true)}\n          onMouseEnter={e => setIsAddButtonHovering(true)}\n          onMouseLeave={e => setIsAddButtonHovering(false)}\n          style={{\n            background:isAddButtonHovering ? background.buttonBackgroundHover : background.buttonBackground,\n            color: text.inverseStrong,\n            height:\"50px\"\n          }}\n        >\n          Add user\n        </Button>\n      </div>\n    </>\n  );\n};\n\nexport default SideBar;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useTheme } from \"@material-ui/core\";\nimport \"./style.scss\";\nimport {\n  Search as SearchIcon,\n  MoreVert as MenuIcon,\n  InsertEmoticon as SmileyIcon,\n  AttachFile as AttatchFileIcon,\n  Mic as MicIcon,\n  AccountCircle as AccountCircleIcon\n} from \"@material-ui/icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ImageWithBuffer from \"../ImageFromBuffer\";\nimport {\n  sendMessageSocket,\n  createRoomAndJoinSocket,\n} from \"../../utils/socketUtils\";\nimport { addChatToRoom } from \"../../store/actions/userAction\";\nimport getDay from \"../../utils/day\";\n\nconst status = \"online\";\n\nconst ChatRoom = (props) => {\n  const theme = useTheme();\n  const { background: backgroundColor, text: textColor } = theme.palette;\n  const headerIconColor = theme.palette.icon.hederIconColor;\n  const [textInput, setTextInput] = useState(\"\");\n  const currentRoomId = useSelector((state) => state.room.currentChatRoomId);\n  const [numberOfChats , setNumberOfChats] = useState(0);\n  const currentRoom = useSelector((state)  =>\n    state.user.chatRooms.find((room) => room._id === currentRoomId)\n  );\n  const bottomDivRef = useRef(null);\n  const userId = useSelector((state) => state.user.id);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if(currentRoom && currentRoom.chats.length !== numberOfChats)\n      {\n        setNumberOfChats(currentRoom.chats.length);\n      }\n  })\n  useEffect(() => {\n    if (bottomDivRef.current) {\n      bottomDivRef.current.scrollIntoView();\n    }\n  },[numberOfChats,currentRoom]);\n\n  if (!currentRoom) {\n    return <></>;\n  }\n  const otherUserInfo =\n    currentRoom.users[0]._id === userId\n      ? currentRoom.users[1]\n      : currentRoom.users[0];\n  const { displayName, profileImage } = otherUserInfo;\n\n  const sendMessage = () => {\n    dispatch(addChatToRoom(currentRoomId, textInput));\n    sendMessageSocket({ userId, roomId: currentRoom._id, text: textInput });\n  };\n\n  const showChats = () => {\n    if (currentRoom.chats.length == 0) {\n      return <></>;\n    }\n    const showDay = (currentDay, prevDay) => {\n      if (currentDay === prevDay) {\n        return null;\n      }\n      return (\n        <div\n          className=\"chatRoom__body__chats__day\"\n          style={{ background: backgroundColor.systemMessageBackground }}\n        >\n          {currentDay}\n        </div>\n      );\n    };\n\n    let previousDay = \"\";\n    const ChatComponents = currentRoom.chats.map((chat) => {\n      const date = new Date(chat.time);\n      const diffTime = Math.abs(new Date() - date);\n      const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n      const currentDay = getDay(diffDays, date);\n      const day = showDay(currentDay, previousDay);\n\n      if (day) {\n        previousDay = currentDay;\n      }\n      if (userId === chat.sender) {\n        return (\n          <>\n            {day}\n            <div\n              className=\"chatRoom__body__chats__chat chatRoom__body__chats__chat-user\"\n              style={{ background: backgroundColor.outGoingBackground }}\n              key={chat._id}\n            >\n              <span className=\"chatRoom__body__chats__chat__text chatRoom__body__chats__chat-user__text\">\n                {chat.text}\n              </span>\n              <span className=\"chatRoom__body__chats__chat-user__time\">\n                {date.getHours() + \".\" + date.getMinutes()}\n              </span>\n            </div>\n          </>\n        );\n      }\n      return (\n        <>\n          {day}\n          <div\n            className=\"chatRoom__body__chats__chat chatRoom__body__chats__chat-other-user\"\n            style={{ background: backgroundColor.incommingBackground }}\n          >\n            <span className=\"chatRoom__body__chats__chat__text chatRoom__body__chats__chat-other-user__text\">\n              {chat.text}\n            </span>\n            <span className=\"chatRoom__body__chats__chat-other-user__time\">\n              {date.getHours() + \".\" + date.getMinutes()}\n            </span>\n          </div>\n        </>\n      );\n    });\n\n    return ChatComponents;\n  };\n\n  return (\n    <div className=\"chatRoom\">\n      <div\n        className=\"chatRoom__header\"\n        style={{ background: backgroundColor.headerBackground }}\n      >\n        <div className=\"chatRoom__header__left\">\n         {profileImage.contentType ? <ImageWithBuffer\n            className=\"chatRoom__img\"\n            contentType={profileImage.contentType}\n            arrayBuffer={profileImage.data.data}\n          /> : <AccountCircleIcon  style={{height:\"50px\",width:\"50px\"}}/>}\n          <div className=\"chatRoom__header__left__info\">\n            <span\n              className=\"chatRoom__header__left__info__name\"\n              style={{ color: textColor.primaryStrong }}\n            >\n              {displayName}\n            </span>\n            <span>{status}</span>\n          </div>\n        </div>\n        <div className=\"chatRoom__header__right\">\n          <SearchIcon style={{ color: headerIconColor }} />\n          <MenuIcon style={{ color: headerIconColor }} />\n        </div>\n      </div>\n      <div\n        className=\"chatRoom__body\"\n        style={{ backgroundImage: `url(./images/chat-background-1.jpg)` }}\n      >\n        <div className=\"chatRoom__body__chats\">\n          {showChats()}\n          <div className=\"chatRoom__body__bottom\" ref={bottomDivRef} />\n        </div>\n      </div>\n      <div\n        className=\"chatRoom__footer\"\n        style={{ background: backgroundColor.headerBackground }}\n      >\n        <SmileyIcon style={{ color: headerIconColor }} />\n        <AttatchFileIcon style={{ color: headerIconColor }} />\n        <input\n          className=\"chatRoom__footer__input\"\n          style={{ background: backgroundColor.searchInputBackground }}\n          value={textInput}\n          placeholder=\"search or start a new chat\"\n          onKeyPress={(e) => {\n            e.stopPropagation();\n            e.nativeEvent.stopImmediatePropagation();\n\n            if (e.repeat) {\n              return;\n            }\n            if (e.key === \"Enter\") {\n              sendMessage();\n              setTextInput(\"\");\n            }\n          }}\n          onChange={(e) => setTextInput(e.target.value)}\n        ></input>\n        <MicIcon style={{ color: headerIconColor }} />\n      </div>\n    </div>\n  );\n};\n\nexport default ChatRoom;\n","import React, { useEffect, useLayoutEffect, useRef, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport \"./style.scss\";\nimport { useTheme } from \"@material-ui/core\";\nimport { motion, useAnimation } from \"framer-motion\";\nimport { Clear as ClearIcon } from \"@material-ui/icons\";\nimport { undoUserUpdateAsync } from \"../../store/actions/userAction\";\nimport { SET_UPDATING_DISPLAY_NAME } from \"../../store/actions/actionTypes\";\n\nlet displayAnmTimeOutId,\n  statusAnmTimeOutId = null;\nconst NotificationBox = (props) => {\n  const { children, undo, showUndoButton, showClearButton, handleClear } = props;\n  const { background, text } = useTheme().palette;\n  return (\n    <div\n      className=\"NotificationBox\"\n      style={{\n        background: background.notificationBackground,\n        color: text.inverseStrong,\n      }}\n      initial={{ y: 20, opacity: 0 }}\n      animate={{ y: 0, opacity: 1 }}\n    >\n      {children}\n      {showUndoButton && (\n        <>\n          <span\n            className=\"ml-4\"\n            style={{ color: text.notificationHighlight, cursor: \"pointer\" }}\n            onClick={undo}\n          >\n            undo\n          </span>\n        </>\n      )}\n      {showClearButton && (\n        <ClearIcon className=\"ml-4\" style={{ cursor: \"pointer\" }} onClick={handleClear}/>\n      )}\n    </div>\n  );\n};\n\nconst NotificationContainer = (props) => {\n  const { updatingDisplayName, updatingStatus, updatingPhoto } = useSelector(\n    (state) => state.user\n  );\n\n  const [updatedDisplayName, setUpdatedDisplayName] = useState(false);\n  const [updatedStatus, setUpdatedStatus] = useState(false);\n  const [updatedPhoto, setUpdatedPhoto] = useState(false);\n  const firstRender = useRef(true);\n  const firstRender2 = useRef(true);\n  const firstRender3 = useRef(true);\n  const photoNotificationController = useAnimation();\n  const displayNameNotificationController = useAnimation();\n  const statusNotificationController = useAnimation(); \n  const dispatch = useDispatch();\n  const [isDisplayNameUndoing, setIsDisplayNameUndoing] = useState(false);\n  const [isStatusUndoing, setIsStatusUndoing] = useState(false);\n\n  //DISPLAY NAME EFFECTS\n  useLayoutEffect(() => {\n    if (firstRender.current) {\n      firstRender.current = false;\n      return;\n    }\n    if (updatingDisplayName) {\n      notificationBoxOpenAnm(\"display-name\");\n      return;\n    }\n\n    if (isDisplayNameUndoing) {\n      clearInterval(displayAnmTimeOutId);\n      setIsDisplayNameUndoing(false);\n      return;\n    }\n    if (!firstRender.current && !updatingDisplayName) {\n      setUpdatedDisplayName(true);\n      displayAnmTimeOutId = setTimeout(() => {\n        setUpdatedDisplayName(false);\n        notificationBoxCloseAnm(\"display-name\");\n        displayAnmTimeOutId = null;\n      }, 5000);\n      return;\n    }\n  }, [firstRender, updatingDisplayName]);\n\n  //STATUS EFFECTS\n  useLayoutEffect(() => {\n    if (firstRender2.current) {\n      firstRender2.current = false;\n      return;\n    }\n    if (updatingStatus) {\n      notificationBoxOpenAnm(\"status\");\n      return;\n    }\n    if (isStatusUndoing) {\n      clearInterval(displayAnmTimeOutId);\n      setIsStatusUndoing(false);\n      return;\n    }\n    if (!firstRender2.current && !updatingStatus) {\n      setUpdatedStatus(true);\n      statusAnmTimeOutId = setTimeout(() => {\n        notificationBoxCloseAnm(\"status\");\n        setUpdatedStatus(false);\n      }, 5000);\n      return;\n    }\n  }, [firstRender2, updatingStatus]);\n\n  //Photo Effect\n  //STATUS EFFECTS\n  useLayoutEffect(() => {\n    if (firstRender3.current) {\n      firstRender3.current = false;\n      return;\n    }\n    if (updatingPhoto) {\n      notificationBoxOpenAnm(\"photo\");\n      return;\n    }\n\n    if (!firstRender3.current && !updatingPhoto) {\n      setUpdatedPhoto(true);\n      setTimeout(() => {\n        notificationBoxCloseAnm(\"photo\");\n        setUpdatedPhoto(false);\n      }, 5000);\n      return;\n    }\n  }, [firstRender3, updatingPhoto]);\n\n\n  const notificationBoxOpenAnm = async (whichNotification) => {\n    switch(whichNotification)\n      {\n        case \"display-name\":\n          await displayNameNotificationController.start({ y: 0, opacity: 1 });\n          break;\n        case \"status\":\n          await statusNotificationController.start({ y: 0, opacity: 1 });\n          break;\n        case \"photo\":\n          await photoNotificationController.start({ y: 0, opacity: 1 });\n          break;\n      }\n  }\n\n  const notificationBoxCloseAnm = async (whichNotification) => {\n    switch(whichNotification)\n    {\n      case \"display-name\":\n        await displayNameNotificationController.start({ y: 20, opacity: 0 });;\n        break;\n      case \"status\":\n        await statusNotificationController.start({ y: 20, opacity: 0 });;\n        break\n      case \"photo\":\n        await photoNotificationController.start({ y: 20, opacity: 0 });;\n        break;\n    }\n  }\n\n\n  return (\n    <motion.div className=\"NotificationContainer\">\n      <motion.div\n        className=\"NotificationContainer__NotificationBoxContainer\"\n        initial={{ y: 20, opacity: 0 }}\n        animate={photoNotificationController}\n      >\n        {(updatingPhoto || updatedPhoto) && (\n          <NotificationBox showClearButton={updatedPhoto}\n          handleClear={e => setUpdatedPhoto(false)}\n          >\n            {updatingPhoto ? \"Setting profile photo\" : \"Profile photo set\"}\n          </NotificationBox>\n        )}\n      </motion.div>\n\n      <motion.div\n        className=\"NotificationContainer__NotificationBoxContainer\"\n        initial={{ y: 20, opacity: 0 }}\n        animate={displayNameNotificationController}\n      >\n        {(updatingDisplayName || updatedDisplayName) && (\n          <NotificationBox\n            showUndoButton={updatedDisplayName}\n            showClearButton={updatedDisplayName}\n            undo={(e) => {\n              setUpdatedDisplayName(false);\n              setIsDisplayNameUndoing(true);\n              dispatch(undoUserUpdateAsync(\"display-name\"));\n            }}\n            handleClear={e => setUpdatedDisplayName(false)}\n          >\n            {updatedDisplayName ? \"Your name changed\" : \"Changing your name\"}\n          </NotificationBox>\n        )}\n      </motion.div>\n\n      <motion.div\n        className=\"NotificationContainer__NotificationBoxContainer\"\n        initial={{ y: 20, opacity: 0 }}\n        animate={statusNotificationController}\n      >\n        {(updatingStatus || updatedStatus) && (\n          <NotificationBox\n            showUndoButton={updatedStatus}\n            showClearButton={updatedStatus}\n            undo={(e) => {\n              setUpdatedStatus(false);\n              setIsStatusUndoing(true);\n              dispatch(undoUserUpdateAsync(\"status\"));\n            }}\n            handleClear={e => setUpdatedStatus(false)}\n          >\n            {updatedStatus ? \"About changed\" : \"Changing about...\"}\n          </NotificationBox>\n        )}\n      </motion.div>\n    </motion.div>\n  );\n};\n\nexport default NotificationContainer;\n","import \"./style.scss\";\nimport React from \"react\"; \nimport {motion, useAnimation} from \"framer-motion\";\nimport {useTheme} from \"@material-ui/core\"; \nimport LaptopWindowsIcon from '@material-ui/icons/LaptopWindows';\n\n\nconst Intro = props => {\n    const theme = useTheme();\n    const {borderStronger,borderIntro} = theme.palette.border;\n    return (<div className=\"Intro\">\n        <div className=\"Intro__body\">\n              <motion.img style={{marginBottom:\"20px\"}} src=\"./images/intro-background.jpg\"/>\n              <h2 style={{marginBottom:\"20px\"}}>Keep your phone connected</h2>\n              <div className=\"Intro__body__text\">\n                    <p>WhatsApp connects to your phone to sync messages. To reduce data </p>\n                    <span style={{marginTop:\"-15px\"}}>usage, connect your phone to Wi-Fi</span>\n              </div>\n              <div className=\"Intro__body__border\" style={{background:borderStronger}}/>\n              <span className=\"Intro__body__extra\">\n                      <LaptopWindowsIcon style={{marginRight:\"5px\"}}/>\n                      WhatsApp available for Windows.<span style={{marginLeft:\"10px\"}}>Get it here.</span>  \n              </span>\n        </div>\n        <div className=\"Intro__footer\" style={{borderTopColor:borderIntro}} />\n    </div>)\n}\n\nexport default Intro; ","import React, { useState, useEffect } from \"react\";\nimport { ThemeProvider } from \"@material-ui/core\";\nimport { createMuiTheme, makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as demoApi from \"../../api/demoAPI\";\nimport { lightTheme, darkTheme } from \"../../utils/theme.js\";\nimport SideBar from \"../../components/SideBar\";\nimport ChatRoom from \"../../components/ChatRoom\";\nimport {useHistory} from \"react-router-dom\";\nimport NotificationContiner from \"../../components/Notification\";\nimport Intro from \"../../components/Intro\";\nimport socket from \"../../utils/socketUtils.js\";\nimport {getUserDetail} from \"../../store/actions/userAction.js\";\nimport {updateUserById} from \"../../api/usersApi.js\";\nimport {setCurrentRoom} from \"../../store/actions/roomAction.js\";\nimport {justJoinRoom} from \"../../utils/socketUtils.js\";\n\nimport \"./style.css\";\n\nconst Home = () => {\n  const currentTheme = useSelector((state) => state.system.currentTheme);\n  const {email,id} = useSelector(state => state.user);\n  const {currentChatRoomId:currentChatRoom} = useSelector(state => state.room);\n  const history = useHistory();\n\n  const dispatch = useDispatch();\n  const {chatRooms, id:userId }= useSelector(state => state.user);\n\n  const joinAllSubscribedRooms = () => {\n    if(!chatRooms || chatRooms.length === 0)\n      {\n        return;\n      }\n      chatRooms.forEach(room => {\n        justJoinRoom(room._id);\n      });\n  }\n\n  useEffect(() => {\n    dispatch(getUserDetail());\n    dispatch(setCurrentRoom(-1));\n    joinAllSubscribedRooms();\n    updateUserById(userId, {socketId:socket.id});\n  },[]);\n\n\n  useEffect(() => {\n    socket.emit(\"set-socket-id\", {userId:id})\n  },[]);\n  \n  if(!email)\n    {\n      history.push(\"/signinsignup\");\n      return (<></>);\n    }\n\n  const getTheme = () => {\n    switch (currentTheme) {\n      case \"light\":\n        return lightTheme;\n      case \"dark\":\n        return darkTheme;\n    }\n  };\n\n  const appliedTheme = createMuiTheme(getTheme());\n\n  return (\n    <ThemeProvider theme={appliedTheme}>\n      <div\n        className=\"home\"\n        style={{ background: appliedTheme.palette.background.outerBackground, backgroundImage:appliedTheme.palette.background.outerBackgroundImage}}\n      >\n          <div className=\"home__header\" style={{background: appliedTheme.palette.background.bannerBackground}} />\n        <div\n          className=\"home__body\"\n          style={{\n            background: appliedTheme.palette.background.innerBackground,\n            boxShadow:appliedTheme.outerBoxShadow,\n          }}\n        >\n          <SideBar  />\n          <ChatRoom />\n          {currentChatRoom === -1 && <Intro />}\n          <NotificationContiner />\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default Home;\n","import * as Api from \"./Api\";\n\nexport const login = (data) => {\n  const url = \"/auth/signin\";\n  return PostRequest(url, data);\n};\n\nexport const signup = (data) => {\n  return new Promise(function (resolve, reject) {\n    const obj = {\n      url: \"/auth/signup\",\n      data: data,\n      onSuccess: (resp) => {\n        resolve(resp);\n      },\n      onError: (err) => {\n        reject(err);\n        console.log(\"api error\", err);\n      },\n    };\n    Api.signUp(obj.url, obj.data, obj.onSuccess, obj.onError);\n  });\n};\n\nexport const PostRequest = (url, data) => {\n  return new Promise(function (resolve, reject) {\n    const obj = {\n      url: url,\n      data: data,\n      onSuccess: (resp) => {\n        resolve(resp);\n      },\n      onError: (err) => {\n        reject(err);\n        console.log(\"api error\", err);\n      },\n    };\n    Api.post(obj.url, obj.data, obj.onSuccess, obj.onError);\n  });\n};\n","import * as actionTypes from \"./actionTypes.js\";\nimport * as authApi from \"../../api/authApi.js\";\nimport * as usersApi from \"../../api/usersApi.js\";\nimport cookies from \"js-cookie\";\n\n\nconst arrayToMap = (arr) => {\n  const obj = {};\n  arr.forEach(ele => {\n    obj[ele] = true;\n  });\n  return obj;\n}\nconst createAction = (type, payLoad) => {\n  return { type, payLoad };\n};\n\nexport const signUpAsync = (formData) => {\n  return async (dispatch,getState) => {\n    try {\n    \n      const isSigningUp = getState().user.isSigningUp;\n      if(isSigningUp)\n        {\n          return;\n        }\n       dispatch(createAction(actionTypes.IS_SIGNING_UP));\n      const user = await authApi.signup(formData);\n      sessionStorage.set(\"accesToken\", user.accessToken, { expires: 365, path: \"/\" });\n      user.friendList = arrayToMap(user.friendList);\n      dispatch(createAction(actionTypes.SET_USER_DETAIL, user));\n    } catch (err) {\n      const errors = err.response.data.errors;\n      const emailErrors = [];\n      const displayNameErrors = []; \n      const passwordErrors = []; \n      errors.forEach(error => {\n        const errorMsg = error.msg.split(' ');\n        const firstElement = errorMsg.shift();\n      switch (firstElement)\n        {\n          case \"Display-name\":\n            displayNameErrors.push(errorMsg.join(' '));\n            break;\n          case \"Password\":\n            passwordErrors.push(errorMsg.join(' '));\n            break;\n          case \"Email\":\n            emailErrors.push(errorMsg.join(' '));\n            break;  \n        }\n      });\n    \n      dispatch(createAction(actionTypes.SET_SIGN_UP_ERRORS, {\n       emailErrors,\n       displayNameErrors,\n       passwordErrors,\n      }))\n    }\n  };\n};\n\nexport const signInAsync = (email, password, socketId) => {\n\n  return async (dispatch) => {\n  \n    try {\n      const user = await authApi.login({ email, password, socketId });\n      console.log(user.accessToken, \"this is it\");\n      sessionStorage.set(\"accesToken\", user.accessToken, { expires: 365, path:'/'}); \n      dispatch(createAction(actionTypes.SET_USER_DETAIL, user));\n    } catch (err) {\n      console.log(err);\n      dispatch(createAction(actionTypes.SET_SIGN_IN_ERRORS,\"Email or password incorrect\"));\n    }\n  };\n};\nexport const getUsersByName = (searchString) => {\n  return async (dispatch) => {\n    try {\n      if (!searchString) {\n        dispatch(createAction(actionTypes.GET_USERS_BY_NAME, []));\n        return;\n      }\n      dispatch(createAction(actionTypes.SET_IS_SEARCHING_USERS));\n      const users = await usersApi.getUsersByName(searchString);\n      dispatch(createAction(actionTypes.GET_USERS_BY_NAME, users));\n    } catch (err) {\n    //  dispatch(createAction(actionTypes.UNSET_IS_SEARCHING_USERS));\n      console.log(err);\n    }\n  };\n};\n\nexport const getUserDetail = () => {\n  return async (dispatch, getState) => {\n    const userId = getState().user.id;\n    try {\n      const user = await usersApi.getUserDetail(userId);\n      user.friendList = arrayToMap(user.friendList);\n      dispatch(createAction(actionTypes.SET_USER_DETAIL, user));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n};\n\nexport const signOut = () => {\n  return async (dispatch) => {\n    sessionStorage.remove(\"accesToken\",{ path:'/'});\n    dispatch(\n      createAction(actionTypes.SET_USER_DETAIL, {\n        displayName: \"\",\n        profileImage: null,\n        email: \"\",\n        chatRooms: null,\n        lastSeen: null,\n        accountCreatedAt: \"\",\n        searchedUsers: [],\n        id: \"\",\n      })\n    );\n  };\n};\n\nexport const updateUserAsync = (propToUpdate, user) => {\n  return async (dispatch, getState) => {\n    try {\n      const {id:userId, ...otherProps} = getState().user;\n      switch (propToUpdate) {\n        case \"photo\":\n          dispatch(createAction(actionTypes.SET_UPDATING_PHOTO));\n          break;\n        case \"status\":\n          dispatch(createAction(actionTypes.SET_UPDATING_STATUS));\n          break;\n        case \"display-name\":\n          dispatch(createAction(actionTypes.SET_UPDATING_DISPLAY_NAME));\n          break;\n      }\n      const newUser = await usersApi.updateUserById(userId, user);\n      newUser.prevStatus = otherProps.status || \"\";\n      newUser.prevDisplayName = otherProps.displayName || \"\";\n      dispatch(createAction(actionTypes.SET_USER_DETAIL, newUser));\n      switch (propToUpdate) {\n        case \"photo\":\n          dispatch(createAction(actionTypes.UNSET_UPDATING_PHOTO));\n          break;\n        case \"status\":\n          dispatch(createAction(actionTypes.UNSET_UPDATING_STATUS));\n          break;\n        case \"display-name\":\n          dispatch(createAction(actionTypes.UNSET_UPDATING_DISPLAY_NAME));\n          break;\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n};\n\nexport const undoUserUpdateAsync = (propsToUndo) => {\n  return async (dispatch,getState) => {\n    const {prevStatus,prevDisplayName} = getState().user; \n    switch(propsToUndo)\n      {\n        case \"display-name\":\n          dispatch(updateUserAsync(\"display-name\",{displayName:prevDisplayName}));\n          break;\n        case \"status\":\n          dispatch(updateUserAsync(\"status\",{status:prevStatus}));\n          break;\n      }\n  }\n}\n\nexport const addChatToRoom = (roomId,text) => {\n  return createAction(actionTypes.ADD_CHAT_TO_ROOM, {roomId,text});\n}\n\nexport const clearSignUpErrors = () => {\n  return createAction(actionTypes.CLEAR_SIGN_UP_ERRORS);\n}\n\nexport const clearSignInErrors = () => {\n  return createAction(actionTypes.CLEAR_SIGN_IN_ERRORS);\n}\n","import * as Api from \"./Api\";\n\nexport const getUserDetail = (userId) => {\n    const url = `/users/singleuser/${userId}`;\n    return GetRequest(url);\n}\nexport const getUsersByName = (searchString) => {\n  const url = `/users/search/${searchString}`;\n  return GetWithCancel(url);\n};\n\nexport const updateUserById = (userId, user) => {\n const url = `/users/updateuser/${userId}`;\n return PutRequest(url,user);\n}\nexport const getUserIdByEmail = (email) => {\n  const url = `/users/getidbyemail/${email}`;\n  return GetRequest(url);\n}\n\nconst GetRequest = (url) => {\n  return new Promise(function (resolve, reject) {\n    const obj = {\n      url: url,\n      onSuccess: (resp) => {\n        resolve(resp);\n      },\n      onError: (err) => {\n        reject(err);\n        console.log(\"api error\", err);\n      },\n    };\n    Api.get(obj.url, obj.onSuccess, obj.onError);\n  });\n};\n\nconst PutRequest = (url, data) => {\n  return new Promise(function (resolve, reject) {\n    const obj = {\n      url: url,\n      data: data,\n      onSuccess: (resp) => {\n        resolve(resp);\n      },\n      onError: (err) => {\n        reject(err);\n        console.log(\"api error\", err);\n      },\n    };\n    Api.put(obj.url, obj.data, obj.onSuccess, obj.onError);\n  });\n};\n\n\nfunction PostRequest(url ,data){\n  return new Promise(function(resolve,reject){\n\n      let obj = {\n          url : url ,\n          data : data,\n          onSuccess: (resp)=>{\n              resolve(resp);\n          },\n          onError:(err) =>{\n              reject(err);\n              console.log('api error' , err);\n          }\n      }\n\n      Api.post(obj.url,obj.data,obj.onSuccess,obj.onError);\n\n  });\n}\n\nfunction DeleteRequest(url) {\n  return new Promise(function (resolve, reject) {\n\n      let obj = {\n          url: url,\n          onSuccess: (resp) => {\n              resolve(resp);\n          },\n          onError: (err) => {\n              reject(err);\n              console.log('api error', err);\n          }\n      }\n\n      Api.deleteApi(obj.url, obj.onSuccess, obj.onError);\n\n  });\n}\n\nconst GetWithCancel = (url) => {\n  return new Promise(function (resolve, reject) {\n    const obj = {\n      url: url,\n      onSuccess: (resp) => {\n        resolve(resp);\n      },\n      onError: (err) => {\n        reject(err);\n        console.log(\"api error\", err);\n      },\n    };\n    Api.getWithCancel(obj.url, obj.onSuccess, obj.onError);\n  });\n};\n\n","import _axios, { create as Create } from \"axios\";\nimport Cookies from \"js-cookie\";\n\nconst UNIQUE_USER_KEY = \"unique_user_key\";\nconst cookie = new Cookies();\n\nfunction getUniqueKey() {\n  let uniqueKey = cookie.get(UNIQUE_USER_KEY, { path: \"/\" });\n  if (!uniqueKey) {\n    // uniqueKey = UUID.randomUUID();\n    // cookie.set(UNIQUE_USER_KEY, uniqueKey, {path: '/'});\n  }\n  return uniqueKey;\n}\n\n\n\nfunction getAuthToken() {\n  return sessionStorage.get(\"accesToken\", { path: \"/\" });\n}\n\nfunction handleError(error) {\n  console.error(error);\n}\n\nconst axios = Create({\n  baseURL: \"/api\",\n  // timeout: 1000,\n});\n\nexport const getWithCancel = async (url, success, error) => {\n  try {\n    if (window.source) {\n      window.source.cancel();\n      window.source = null;\n    }\n    const CancelToken = _axios.CancelToken;\n    window.source = CancelToken.source();\n    const { data } = await axios({\n      mathod: \"get\",\n      url: url,\n      responseType: \"application/json\",\n      cancelToken: window.source.token,\n      headers: { authorization: \"bearer \" + getAuthToken() },\n    });\n    success(data);\n  } catch (err) {\n    error(err);\n  }\n};\n\nexport const get = async (url, success, error) => {\n  try {\n    const { data } = await axios({\n      mathod: \"get\",\n      url: url,\n      responseType: \"application/json\",\n      headers: { authorization: \"bearer \" + getAuthToken() },\n    });\n    success(data);\n  } catch (err) {\n    error(err);\n  }\n};\n\nexport const deleteApi = async (url, success, error) => {\n  try {\n    const { data } = await axios({\n      mathod: \"delete\",\n      url: url,\n      responseType: \"application/json\",\n      headers: { authorization: \"bearer \" + getAuthToken() },\n    });\n    success(data);\n  } catch (err) {\n    error(err);\n  }\n};\n\nexport const post = async (url, reqData, success, error) => {\n  try {\n    const { data } = await axios({\n      method: \"post\",\n      url: url,\n      data: reqData,\n      responseType: \"application/json\",\n      headers: { authorization: \"bearer \" + getAuthToken() },\n    });\n    success(data);\n  } catch (err) {\n    error(err);\n  }\n};\n\nexport const signUp = async (url, reqData, success, error) => {\n  try {\n    const { data } = await axios({\n      method: \"post\",\n      url: url,\n      data: reqData,\n      responseType: \"application/json\",\n    });\n    success(data);\n  } catch (err) {\n    error(err);\n  }\n};\n\nexport const put = async (url, reqData, success, error) => {\n  try {\n    const { data } = await axios({\n      method: \"put\",\n      url: url,\n      data: reqData,\n      responseType: \"application/json\",\n      headers: { authorization: \"bearer \" + getAuthToken() },\n    });\n    success(data);\n  } catch (err) {\n    error(err);\n  }\n};\n","import io from \"socket.io-client\";\nimport { store } from \"../store\";\nimport { getNewChatFromSocket } from \"../store/actions/roomAction.js\";\nimport { getUserDetail } from \"../store/actions/userAction.js\";\nimport { updateUserById } from \"../api/usersApi.js\";\n\nexport const socket = io(\"/\");\n\nsocket.on(\"msg-sent\", (data) => {\n  store.dispatch(getNewChatFromSocket(data));\n});\n\nsocket.on(\"room-created\", () => {\n  store.dispatch(getUserDetail());\n});\n\nsocket.on(\"req-join-room\", (roomId) => {\n  store.dispatch(getUserDetail());\n  justJoinRoom(roomId);\n});\n\nexport const createRoomAndJoinSocket = (userId, user2Id) => {\n  socket.emit(\"join-room\", { userId, user2Id });\n};\n\nexport const justJoinRoom = (roomId) => {\n  socket.emit(\"just-join-room\", { roomId });\n};\n\nexport const sendMessageSocket = ({ userId, roomId, text }) => {\n  console.log(\"this is the socket id\", socket.id);\n  socket.emit(\"send-msg\", { userId, roomId, text, socketId: socket.id });\n};\n\nexport default socket;\n","import * as actionTypes from \"./actionTypes.js\";\n\n\n\nconst createAction = (type, payLoad) => {\n    return { type, payLoad };\n  };\n\n  \nexport const setCurrentRoom = (roomId) => {\n    return createAction(actionTypes.SET_CURRENT_ROOM,roomId);\n}\n\nexport const getNewChatFromSocket = (newChat) =>\n  {\n    return createAction(actionTypes.GET_MESSAGE,newChat)\n  }\n\n","\nexport const lightTheme = {\n    palette:{\n        background:{\n            outerBackground:\"#dddbd1\",\n            outerBackgroundImage:\"linear-gradient(180deg,#dddbd1,#d2dbdc)\",\n            innerBackground:\"#f8f9fa\",\n            headerBackground:\"#ededed\",\n            searchInputBackground:\"#fff\",\n            searchContainerBackground:\"#f6f6f6\",\n            siderBarChatListBackground:\"#fff\",\n            headerColorLight:\"#00bfa5\",\n            chatListBackgroundActive:\"#ebebeb\",\n            chatListBackgroundHover:\"#f5f5f5\",\n            uploadPicOverlayBackground:\"hsla(0,0%,40%,0.8)\",\n            profileDrawerBackground:\"#ededed\",\n            headerDarkBackground:\"#009688\",\n            notificationBackground:\"rgba(0,0,0,0.82)\",\n            outGoingBackground:\"#dcf8c6\",\n            incommingBackground:\"#fff\",\n            systemMessageBackground:\"rgba(225,245,254,0.92)\",\n            bannerBackground:\"#009688\",\n            buttonBackground:\"#009688\",\n            buttonBackgroundHover:\"#00bfa5\",\n        },\n        icon:{\n            hederIconColor:\"#919191\",\n            addedUserIconNumber:\"#1b9a59\",\n            cameraIconColor:\"#25d366\",\n            arrowIconColor:\"#4fc3f7\",\n            iconColor:\"#919191\",\n        },\n        text:{\n            primaryStrong:\"#000\",\n            inverseStrong:\"#fff\",\n            notificationHighlight:\"#ff0\",\n        },\n        border:{\n            borderStronger:\"rgba(0,0,0,0.08)\",\n            borderIntro:\"#4adf83\",\n        }  \n\n        \n    },\n    outerBoxShadow:\"0 1px 1px 0 rgba(0,0,0,.06),0 2px 5px 0 rgba(0,0,0,.2)\",\n};\n\nexport const darkTheme = {\n    palette:{\n        background:{\n            outerBackground:\"black\",\n            innerBackground:\"black\",\n        }  \n    }\n};\n\n\n\n\n\n"],"sourceRoot":""}