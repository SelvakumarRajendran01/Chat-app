{"ast":null,"code":"var _jsxFileName = \"/Users/mohanselva/Documents/whatsapp-MERN/client/src/components/Notification/index.js\";\nimport React, { useEffect, useLayoutEffect, useRef, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport \"./style.scss\";\nimport { useTheme } from \"@material-ui/core\";\nimport { motion, useAnimation } from \"framer-motion\";\nimport { Clear as ClearIcon } from \"@material-ui/icons\";\nimport { undoUserUpdateAsync } from \"../../store/actions/userAction\";\nimport { SET_UPDATING_DISPLAY_NAME } from \"../../store/actions/actionTypes\";\nlet displayAnmTimeOutId,\n  statusAnmTimeOutId = null;\nconst NotificationBox = props => {\n  const {\n    children,\n    undo,\n    showUndoButton,\n    showClearButton,\n    handleClear\n  } = props;\n  const {\n    background,\n    text\n  } = useTheme().palette;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"NotificationBox\",\n    style: {\n      background: background.notificationBackground,\n      color: text.inverseStrong\n    },\n    initial: {\n      y: 20,\n      opacity: 0\n    },\n    animate: {\n      y: 0,\n      opacity: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, children, showUndoButton && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ml-4\",\n    style: {\n      color: text.notificationHighlight,\n      cursor: \"pointer\"\n    },\n    onClick: undo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, \"undo\")), showClearButton && /*#__PURE__*/React.createElement(ClearIcon, {\n    className: \"ml-4\",\n    style: {\n      cursor: \"pointer\"\n    },\n    onClick: handleClear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }));\n};\nconst NotificationContainer = props => {\n  const {\n    updatingDisplayName,\n    updatingStatus,\n    updatingPhoto\n  } = useSelector(state => state.user);\n  const [updatedDisplayName, setUpdatedDisplayName] = useState(false);\n  const [updatedStatus, setUpdatedStatus] = useState(false);\n  const [updatedPhoto, setUpdatedPhoto] = useState(false);\n  const firstRender = useRef(true);\n  const firstRender2 = useRef(true);\n  const firstRender3 = useRef(true);\n  const photoNotificationController = useAnimation();\n  const displayNameNotificationController = useAnimation();\n  const statusNotificationController = useAnimation();\n  const dispatch = useDispatch();\n  const [isDisplayNameUndoing, setIsDisplayNameUndoing] = useState(false);\n  const [isStatusUndoing, setIsStatusUndoing] = useState(false);\n\n  //DISPLAY NAME EFFECTS\n  useLayoutEffect(() => {\n    if (firstRender.current) {\n      firstRender.current = false;\n      return;\n    }\n    if (updatingDisplayName) {\n      notificationBoxOpenAnm(\"display-name\");\n      return;\n    }\n    if (isDisplayNameUndoing) {\n      clearInterval(displayAnmTimeOutId);\n      setIsDisplayNameUndoing(false);\n      return;\n    }\n    if (!firstRender.current && !updatingDisplayName) {\n      setUpdatedDisplayName(true);\n      displayAnmTimeOutId = setTimeout(() => {\n        setUpdatedDisplayName(false);\n        notificationBoxCloseAnm(\"display-name\");\n        displayAnmTimeOutId = null;\n      });\n      return;\n    }\n  }, [firstRender, updatingDisplayName]);\n\n  //STATUS EFFECTS\n  useLayoutEffect(() => {\n    if (firstRender2.current) {\n      firstRender2.current = false;\n      return;\n    }\n    if (updatingStatus) {\n      notificationBoxOpenAnm(\"status\");\n      return;\n    }\n    if (isStatusUndoing) {\n      clearInterval(displayAnmTimeOutId);\n      setIsStatusUndoing(false);\n      return;\n    }\n    if (!firstRender2.current && !updatingStatus) {\n      setUpdatedStatus(true);\n      statusAnmTimeOutId = setTimeout(() => {\n        notificationBoxCloseAnm(\"status\");\n        setUpdatedStatus(false);\n      }, 3001);\n      return;\n    }\n  }, [firstRender2, updatingStatus]);\n\n  //Photo Effect\n  //STATUS EFFECTS\n  useLayoutEffect(() => {\n    if (firstRender3.current) {\n      firstRender3.current = false;\n      return;\n    }\n    if (updatingPhoto) {\n      notificationBoxOpenAnm(\"photo\");\n      return;\n    }\n    if (!firstRender3.current && !updatingPhoto) {\n      setUpdatedPhoto(true);\n      setTimeout(() => {\n        notificationBoxCloseAnm(\"photo\");\n        setUpdatedPhoto(false);\n      }, 3001);\n      return;\n    }\n  }, [firstRender3, updatingPhoto]);\n  const notificationBoxOpenAnm = async whichNotification => {\n    switch (whichNotification) {\n      case \"display-name\":\n        await displayNameNotificationController.start({\n          y: 0,\n          opacity: 1\n        });\n        break;\n      case \"status\":\n        await statusNotificationController.start({\n          y: 0,\n          opacity: 1\n        });\n        break;\n      case \"photo\":\n        await photoNotificationController.start({\n          y: 0,\n          opacity: 1\n        });\n        break;\n    }\n  };\n  const notificationBoxCloseAnm = async whichNotification => {\n    switch (whichNotification) {\n      case \"display-name\":\n        await displayNameNotificationController.start({\n          y: 20,\n          opacity: 0\n        });\n        ;\n        break;\n      case \"status\":\n        await statusNotificationController.start({\n          y: 20,\n          opacity: 0\n        });\n        ;\n        break;\n      case \"photo\":\n        await photoNotificationController.start({\n          y: 20,\n          opacity: 0\n        });\n        ;\n        break;\n    }\n  };\n  return /*#__PURE__*/React.createElement(motion.div, {\n    className: \"NotificationContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(motion.div, {\n    className: \"NotificationContainer__NotificationBoxContainer\",\n    initial: {\n      y: 20,\n      opacity: 0\n    },\n    animate: photoNotificationController,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  }, (updatingPhoto || updatedPhoto) && /*#__PURE__*/React.createElement(NotificationBox, {\n    showClearButton: updatedPhoto,\n    handleClear: e => setUpdatedPhoto(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }, updatingPhoto ? \"Setting profile photo\" : \"Profile photo set\")), /*#__PURE__*/React.createElement(motion.div, {\n    className: \"NotificationContainer__NotificationBoxContainer\",\n    initial: {\n      y: 20,\n      opacity: 0\n    },\n    animate: displayNameNotificationController,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }\n  }, (updatingDisplayName || updatedDisplayName) && /*#__PURE__*/React.createElement(NotificationBox, {\n    showUndoButton: updatedDisplayName,\n    showClearButton: updatedDisplayName,\n    undo: e => {\n      setUpdatedDisplayName(false);\n      setIsDisplayNameUndoing(true);\n      dispatch(undoUserUpdateAsync(\"display-name\"));\n    },\n    handleClear: e => setUpdatedDisplayName(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }, updatedDisplayName ? \"Your name changed\" : \"Changing your name\")), /*#__PURE__*/React.createElement(motion.div, {\n    className: \"NotificationContainer__NotificationBoxContainer\",\n    initial: {\n      y: 20,\n      opacity: 0\n    },\n    animate: statusNotificationController,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }\n  }, (updatingStatus || updatedStatus) && /*#__PURE__*/React.createElement(NotificationBox, {\n    showUndoButton: updatedStatus,\n    showClearButton: updatedStatus,\n    undo: e => {\n      setUpdatedStatus(false);\n      setIsStatusUndoing(true);\n      dispatch(undoUserUpdateAsync(\"status\"));\n    },\n    handleClear: e => setUpdatedStatus(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }\n  }, updatedStatus ? \"About changed\" : \"Changing about...\")));\n};\nexport default NotificationContainer;","map":{"version":3,"names":["React","useEffect","useLayoutEffect","useRef","useState","useSelector","useDispatch","useTheme","motion","useAnimation","Clear","ClearIcon","undoUserUpdateAsync","SET_UPDATING_DISPLAY_NAME","displayAnmTimeOutId","statusAnmTimeOutId","NotificationBox","props","children","undo","showUndoButton","showClearButton","handleClear","background","text","palette","createElement","className","style","notificationBackground","color","inverseStrong","initial","y","opacity","animate","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","notificationHighlight","cursor","onClick","NotificationContainer","updatingDisplayName","updatingStatus","updatingPhoto","state","user","updatedDisplayName","setUpdatedDisplayName","updatedStatus","setUpdatedStatus","updatedPhoto","setUpdatedPhoto","firstRender","firstRender2","firstRender3","photoNotificationController","displayNameNotificationController","statusNotificationController","dispatch","isDisplayNameUndoing","setIsDisplayNameUndoing","isStatusUndoing","setIsStatusUndoing","current","notificationBoxOpenAnm","clearInterval","setTimeout","notificationBoxCloseAnm","whichNotification","start","div","e"],"sources":["/Users/mohanselva/Documents/whatsapp-MERN/client/src/components/Notification/index.js"],"sourcesContent":["import React, { useEffect, useLayoutEffect, useRef, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport \"./style.scss\";\nimport { useTheme } from \"@material-ui/core\";\nimport { motion, useAnimation } from \"framer-motion\";\nimport { Clear as ClearIcon } from \"@material-ui/icons\";\nimport { undoUserUpdateAsync } from \"../../store/actions/userAction\";\nimport { SET_UPDATING_DISPLAY_NAME } from \"../../store/actions/actionTypes\";\n\nlet displayAnmTimeOutId,\n  statusAnmTimeOutId = null;\nconst NotificationBox = (props) => {\n  const { children, undo, showUndoButton, showClearButton, handleClear } = props;\n  const { background, text } = useTheme().palette;\n  return (\n    <div\n      className=\"NotificationBox\"\n      style={{\n        background: background.notificationBackground,\n        color: text.inverseStrong,\n      }}\n      initial={{ y: 20, opacity: 0 }}\n      animate={{ y: 0, opacity: 1 }}\n    >\n      {children}\n      {showUndoButton && (\n        <>\n          <span\n            className=\"ml-4\"\n            style={{ color: text.notificationHighlight, cursor: \"pointer\" }}\n            onClick={undo}\n          >\n            undo\n          </span>\n        </>\n      )}\n      {showClearButton && (\n        <ClearIcon className=\"ml-4\" style={{ cursor: \"pointer\" }} onClick={handleClear}/>\n      )}\n    </div>\n  );\n};\n\nconst NotificationContainer = (props) => {\n  const { updatingDisplayName, updatingStatus, updatingPhoto } = useSelector(\n    (state) => state.user\n  );\n\n  const [updatedDisplayName, setUpdatedDisplayName] = useState(false);\n  const [updatedStatus, setUpdatedStatus] = useState(false);\n  const [updatedPhoto, setUpdatedPhoto] = useState(false);\n  const firstRender = useRef(true);\n  const firstRender2 = useRef(true);\n  const firstRender3 = useRef(true);\n  const photoNotificationController = useAnimation();\n  const displayNameNotificationController = useAnimation();\n  const statusNotificationController = useAnimation(); \n  const dispatch = useDispatch();\n  const [isDisplayNameUndoing, setIsDisplayNameUndoing] = useState(false);\n  const [isStatusUndoing, setIsStatusUndoing] = useState(false);\n\n  //DISPLAY NAME EFFECTS\n  useLayoutEffect(() => {\n    if (firstRender.current) {\n      firstRender.current = false;\n      return;\n    }\n    if (updatingDisplayName) {\n      notificationBoxOpenAnm(\"display-name\");\n      return;\n    }\n\n    if (isDisplayNameUndoing) {\n      clearInterval(displayAnmTimeOutId);\n      setIsDisplayNameUndoing(false);\n      return;\n    }\n    if (!firstRender.current && !updatingDisplayName) {\n      setUpdatedDisplayName(true);\n      displayAnmTimeOutId = setTimeout(() => {\n        setUpdatedDisplayName(false);\n        notificationBoxCloseAnm(\"display-name\");\n        displayAnmTimeOutId = null;\n      }, );\n      return;\n    }\n  }, [firstRender, updatingDisplayName]);\n\n  //STATUS EFFECTS\n  useLayoutEffect(() => {\n    if (firstRender2.current) {\n      firstRender2.current = false;\n      return;\n    }\n    if (updatingStatus) {\n      notificationBoxOpenAnm(\"status\");\n      return;\n    }\n    if (isStatusUndoing) {\n      clearInterval(displayAnmTimeOutId);\n      setIsStatusUndoing(false);\n      return;\n    }\n    if (!firstRender2.current && !updatingStatus) {\n      setUpdatedStatus(true);\n      statusAnmTimeOutId = setTimeout(() => {\n        notificationBoxCloseAnm(\"status\");\n        setUpdatedStatus(false);\n      }, 3001);\n      return;\n    }\n  }, [firstRender2, updatingStatus]);\n\n  //Photo Effect\n  //STATUS EFFECTS\n  useLayoutEffect(() => {\n    if (firstRender3.current) {\n      firstRender3.current = false;\n      return;\n    }\n    if (updatingPhoto) {\n      notificationBoxOpenAnm(\"photo\");\n      return;\n    }\n\n    if (!firstRender3.current && !updatingPhoto) {\n      setUpdatedPhoto(true);\n      setTimeout(() => {\n        notificationBoxCloseAnm(\"photo\");\n        setUpdatedPhoto(false);\n      }, 3001);\n      return;\n    }\n  }, [firstRender3, updatingPhoto]);\n\n\n  const notificationBoxOpenAnm = async (whichNotification) => {\n    switch(whichNotification)\n      {\n        case \"display-name\":\n          await displayNameNotificationController.start({ y: 0, opacity: 1 });\n          break;\n        case \"status\":\n          await statusNotificationController.start({ y: 0, opacity: 1 });\n          break;\n        case \"photo\":\n          await photoNotificationController.start({ y: 0, opacity: 1 });\n          break;\n      }\n  }\n\n  const notificationBoxCloseAnm = async (whichNotification) => {\n    switch(whichNotification)\n    {\n      case \"display-name\":\n        await displayNameNotificationController.start({ y: 20, opacity: 0 });;\n        break;\n      case \"status\":\n        await statusNotificationController.start({ y: 20, opacity: 0 });;\n        break\n      case \"photo\":\n        await photoNotificationController.start({ y: 20, opacity: 0 });;\n        break;\n    }\n  }\n\n\n  return (\n    <motion.div className=\"NotificationContainer\">\n      <motion.div\n        className=\"NotificationContainer__NotificationBoxContainer\"\n        initial={{ y: 20, opacity: 0 }}\n        animate={photoNotificationController}\n      >\n        {(updatingPhoto || updatedPhoto) && (\n          <NotificationBox showClearButton={updatedPhoto}\n          handleClear={e => setUpdatedPhoto(false)}\n          >\n            {updatingPhoto ? \"Setting profile photo\" : \"Profile photo set\"}\n          </NotificationBox>\n        )}\n      </motion.div>\n\n      <motion.div\n        className=\"NotificationContainer__NotificationBoxContainer\"\n        initial={{ y: 20, opacity: 0 }}\n        animate={displayNameNotificationController}\n      >\n        {(updatingDisplayName || updatedDisplayName) && (\n          <NotificationBox\n            showUndoButton={updatedDisplayName}\n            showClearButton={updatedDisplayName}\n            undo={(e) => {\n              setUpdatedDisplayName(false);\n              setIsDisplayNameUndoing(true);\n              dispatch(undoUserUpdateAsync(\"display-name\"));\n            }}\n            handleClear={e => setUpdatedDisplayName(false)}\n          >\n            {updatedDisplayName ? \"Your name changed\" : \"Changing your name\"}\n          </NotificationBox>\n        )}\n      </motion.div>\n\n      <motion.div\n        className=\"NotificationContainer__NotificationBoxContainer\"\n        initial={{ y: 20, opacity: 0 }}\n        animate={statusNotificationController}\n      >\n        {(updatingStatus || updatedStatus) && (\n          <NotificationBox\n            showUndoButton={updatedStatus}\n            showClearButton={updatedStatus}\n            undo={(e) => {\n              setUpdatedStatus(false);\n              setIsStatusUndoing(true);\n              dispatch(undoUserUpdateAsync(\"status\"));\n            }}\n            handleClear={e => setUpdatedStatus(false)}\n          >\n            {updatedStatus ? \"About changed\" : \"Changing about...\"}\n          </NotificationBox>\n        )}\n      </motion.div>\n    </motion.div>\n  );\n};\n\nexport default NotificationContainer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}