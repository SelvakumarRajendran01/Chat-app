{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{motion,useAnimation}from\"framer-motion\";import{useSelector,useDispatch}from\"react-redux\";import{setCurrentRoom}from\"../../store/actions/roomAction\";import{useTheme}from\"@material-ui/core\";import SearchBar from\"../SearchBar\";import{AccountCircle as AccountCircleIcon}from\"@material-ui/icons\";import\"./style.scss\";import{ArrowBack as ArrowBackIcon,Search as SearchIcon}from\"@material-ui/icons\";import ImageFromBuffer from\"../ImageFromBuffer\";import{ListGroup}from\"react-bootstrap\";const StartConversationDrawer=props=>{const{openDrawer,handleCloseDrawer}=props;const{chatRooms,id,status}=useSelector(state=>state.user);const drawerControl=useAnimation();const[activeIndex,setActiveIndex]=useState(-1);const[hoverIndex,setHoverIndex]=useState(-1);const dispatch=useDispatch();const theme=useTheme();const[searchInput,setSearchInput]=useState('');const{background,text}=theme.palette;const drawerOpeningSequence=async()=>{await drawerControl.start({x:0,transition:{duration:\"0.5\"}});};const drawerClosingSequence=async()=>{await drawerControl.start({x:-1000,transition:{duration:\"0.5\"}});};useEffect(()=>{if(openDrawer){drawerOpeningSequence();return;}drawerClosingSequence();},[openDrawer]);const handleCurrentRoomChange=(e,roomId)=>{e.preventDefault();dispatch(setCurrentRoom(roomId));handleCloseDrawer();};const showInactiveChatRooms=()=>{const inactiveRoomsComponents=chatRooms.map((room,index)=>{if(!room.chats){return/*#__PURE__*/React.createElement(React.Fragment,null);}if(room.chats.length===0){const otherUserInfo=id===room.users[0]._id?room.users[1]:room.users[0];if(searchInput&&!otherUserInfo.displayName.match(new RegExp(`${searchInput}`,\"i\"))){return/*#__PURE__*/React.createElement(React.Fragment,null);}return/*#__PURE__*/React.createElement(ListGroup.Item,{className:\"startConversationDrawer__body__user-info-wrapper\",onClick:e=>handleCurrentRoomChange(e,room._id),style:hoverIndex===index?{background:background.chatListBackgroundHover}:{},onMouseEnter:e=>setHoverIndex(index),onMouseLeave:e=>setHoverIndex(-1)},/*#__PURE__*/React.createElement(\"div\",{className:\"startConversationDrawer__body__user-info\"},otherUserInfo.profileImage.contentType?/*#__PURE__*/React.createElement(ImageFromBuffer,{className:\"profileImage\",arrayBuffer:otherUserInfo.profileImage.data.data,contentType:otherUserInfo.profileImage.contentType}):/*#__PURE__*/React.createElement(AccountCircleIcon,{style:{height:\"50px\",width:\"50px\"}}),/*#__PURE__*/React.createElement(\"div\",{className:\"startConversationDrawer__body__user-info__name-and-status\"},/*#__PURE__*/React.createElement(\"h5\",null,otherUserInfo.displayName),/*#__PURE__*/React.createElement(\"p\",null,status))));}return/*#__PURE__*/React.createElement(React.Fragment,null);});return inactiveRoomsComponents;};return/*#__PURE__*/React.createElement(motion.div,{className:\"startConversationDrawer\",animate:drawerControl,initial:{x:-1000},style:{background:background.siderBarChatListBackground}},/*#__PURE__*/React.createElement(\"div\",{className:\"startConversationDrawer__header\",style:{background:background.headerColorLight,color:background.siderBarChatListBackground}},/*#__PURE__*/React.createElement(ArrowBackIcon,{onClick:e=>handleCloseDrawer()}),/*#__PURE__*/React.createElement(\"h4\",null,\"New chat\")),/*#__PURE__*/React.createElement(\"div\",{className:\"startConversationDrawer__body\"},/*#__PURE__*/React.createElement(SearchBar,{searchInput:searchInput,setSearchInput:setSearchInput,placeHolder:\"Search user..\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"startConversationDrawer__body__chatList\"},/*#__PURE__*/React.createElement(ListGroup,null,showInactiveChatRooms()))));};export default StartConversationDrawer;","map":{"version":3,"names":["React","useState","useEffect","motion","useAnimation","useSelector","useDispatch","setCurrentRoom","useTheme","SearchBar","AccountCircle","AccountCircleIcon","ArrowBack","ArrowBackIcon","Search","SearchIcon","ImageFromBuffer","ListGroup","StartConversationDrawer","props","openDrawer","handleCloseDrawer","chatRooms","id","status","state","user","drawerControl","activeIndex","setActiveIndex","hoverIndex","setHoverIndex","dispatch","theme","searchInput","setSearchInput","background","text","palette","drawerOpeningSequence","start","x","transition","duration","drawerClosingSequence","handleCurrentRoomChange","e","roomId","preventDefault","showInactiveChatRooms","inactiveRoomsComponents","map","room","index","chats","createElement","Fragment","length","otherUserInfo","users","_id","displayName","match","RegExp","Item","className","onClick","style","chatListBackgroundHover","onMouseEnter","onMouseLeave","profileImage","contentType","arrayBuffer","data","height","width","div","animate","initial","siderBarChatListBackground","headerColorLight","color","placeHolder"],"sources":["/Users/mohanselva/Desktop/Private_Projects/Chat-app/client/src/components/StartConversationDrawer/index.js"],"sourcesContent":["import React, {useState, useEffect } from \"react\";\nimport { motion, useAnimation } from \"framer-motion\";\nimport { useSelector,useDispatch } from \"react-redux\";\nimport {setCurrentRoom} from \"../../store/actions/roomAction\";\nimport { useTheme } from \"@material-ui/core\";\nimport SearchBar from \"../SearchBar\";\nimport { AccountCircle as AccountCircleIcon } from \"@material-ui/icons\";\nimport \"./style.scss\";\nimport {\n  ArrowBack as ArrowBackIcon,\n  Search as SearchIcon,\n} from \"@material-ui/icons\";\nimport ImageFromBuffer from \"../ImageFromBuffer\";\nimport { ListGroup } from \"react-bootstrap\";\n\nconst StartConversationDrawer = (props) => {\n  const { openDrawer, handleCloseDrawer } = props;\n  const { chatRooms, id,status } = useSelector((state) => state.user);\n  const drawerControl = useAnimation();\n  const [activeIndex,setActiveIndex] = useState(-1);\n  const [hoverIndex,setHoverIndex ] = useState(-1);  \n  const dispatch = useDispatch();\n  const theme = useTheme();\n  const [searchInput, setSearchInput] = useState('');\n  const { background, text } = theme.palette;\n  const drawerOpeningSequence = async () => {\n    await drawerControl.start({ x: 0, transition: { duration: \"0.5\" } });\n  };\n  const drawerClosingSequence = async () => {\n    await drawerControl.start({ x: -1000, transition: { duration: \"0.5\" } });\n  };\n  useEffect(() => {\n    if (openDrawer) {\n      drawerOpeningSequence();\n      return;\n    }\n    drawerClosingSequence();\n  }, [openDrawer]);\n  \n  const handleCurrentRoomChange = (e, roomId) => {\n    e.preventDefault();\n    dispatch(setCurrentRoom(roomId));\n    handleCloseDrawer();\n  }\n\n  const showInactiveChatRooms = () => {\n \n    const inactiveRoomsComponents = chatRooms.map((room,index) => {\n      if(!room.chats)\n        {\n          return <></> ;\n        }\n      if (room.chats.length === 0) {\n        const otherUserInfo =\n          id === room.users[0]._id ? room.users[1] : room.users[0];\n          if (\n            searchInput &&\n            !otherUserInfo.displayName.match(new RegExp(`${searchInput}`, \"i\"))\n          ) {\n            return <></>;\n          }\n        return (\n          <ListGroup.Item className=\"startConversationDrawer__body__user-info-wrapper\" onClick={e => handleCurrentRoomChange(e, room._id)} style={hoverIndex === index ? {\n            background:background.chatListBackgroundHover,\n          } : {} } onMouseEnter={e => setHoverIndex(index)} onMouseLeave={e => setHoverIndex(-1)}>\n            <div className=\"startConversationDrawer__body__user-info\" >\n             {otherUserInfo.profileImage.contentType ? <ImageFromBuffer\n                className=\"profileImage\"\n                arrayBuffer={otherUserInfo.profileImage.data.data}\n                contentType={otherUserInfo.profileImage.contentType}\n              /> : <AccountCircleIcon  style={{height:\"50px\", width:\"50px\"}} /> }\n              <div className=\"startConversationDrawer__body__user-info__name-and-status\" >\n                  <h5>{otherUserInfo.displayName}</h5>\n                  <p>{status}</p>\n              </div>\n            </div>\n          </ListGroup.Item>\n        );\n      }\n      return <></>;\n    });\n    return inactiveRoomsComponents;\n  };\n  return (\n    <motion.div\n      className=\"startConversationDrawer\"\n      animate={drawerControl}\n      initial={{ x: -1000 }}\n      style={{ background: background.siderBarChatListBackground }}\n    >\n      <div\n        className=\"startConversationDrawer__header\"\n        style={{\n          background: background.headerColorLight,\n          color: background.siderBarChatListBackground,\n        }}\n      >\n        <ArrowBackIcon onClick={(e) => handleCloseDrawer()} />\n        <h4>New chat</h4>\n      </div>\n      <div className=\"startConversationDrawer__body\">\n       <SearchBar searchInput={searchInput} setSearchInput={setSearchInput} placeHolder={\"Search user..\"}/>\n        <div className=\"startConversationDrawer__body__chatList\">\n          <ListGroup>{showInactiveChatRooms()}</ListGroup>\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default StartConversationDrawer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}