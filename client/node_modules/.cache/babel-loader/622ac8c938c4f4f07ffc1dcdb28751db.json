{"ast":null,"code":"import * as Api from \"./Api\";\nexport const getUserDetail = userId => {\n  const url = `/users/singleuser/${userId}`;\n  return GetRequest(url);\n};\nexport const getUsersByName = searchString => {\n  const url = `/users/search/${searchString}`;\n  return GetWithCancel(url);\n};\nexport const updateUserById = (userId, user) => {\n  const url = `/users/updateuser/${userId}`;\n  return PutRequest(url, user);\n};\nexport const getUserIdByEmail = email => {\n  const url = `/users/getidbyemail/${email}`;\n  return GetRequest(url);\n};\nconst GetRequest = url => {\n  return new Promise(function (resolve, reject) {\n    const obj = {\n      url: url,\n      onSuccess: resp => {\n        resolve(resp);\n      },\n      onError: err => {\n        reject(err);\n        console.log(\"api error\", err);\n      }\n    };\n    Api.get(obj.url, obj.onSuccess, obj.onError);\n  });\n};\nconst PutRequest = (url, data) => {\n  return new Promise(function (resolve, reject) {\n    const obj = {\n      url: url,\n      data: data,\n      onSuccess: resp => {\n        resolve(resp);\n      },\n      onError: err => {\n        reject(err);\n        console.log(\"api error\", err);\n      }\n    };\n    Api.put(obj.url, obj.data, obj.onSuccess, obj.onError);\n  });\n};\nfunction PostRequest(url, data) {\n  return new Promise(function (resolve, reject) {\n    let obj = {\n      url: url,\n      data: data,\n      onSuccess: resp => {\n        resolve(resp);\n      },\n      onError: err => {\n        reject(err);\n        console.log('api error', err);\n      }\n    };\n    Api.post(obj.url, obj.data, obj.onSuccess, obj.onError);\n  });\n}\nfunction DeleteRequest(url) {\n  return new Promise(function (resolve, reject) {\n    let obj = {\n      url: url,\n      onSuccess: resp => {\n        resolve(resp);\n      },\n      onError: err => {\n        reject(err);\n        console.log('api error', err);\n      }\n    };\n    Api.deleteApi(obj.url, obj.onSuccess, obj.onError);\n  });\n}\nconst GetWithCancel = url => {\n  return new Promise(function (resolve, reject) {\n    const obj = {\n      url: url,\n      onSuccess: resp => {\n        resolve(resp);\n      },\n      onError: err => {\n        reject(err);\n        console.log(\"api error\", err);\n      }\n    };\n    Api.getWithCancel(obj.url, obj.onSuccess, obj.onError);\n  });\n};","map":{"version":3,"names":["Api","getUserDetail","userId","url","GetRequest","getUsersByName","searchString","GetWithCancel","updateUserById","user","PutRequest","getUserIdByEmail","email","Promise","resolve","reject","obj","onSuccess","resp","onError","err","console","log","get","data","put","PostRequest","post","DeleteRequest","deleteApi","getWithCancel"],"sources":["/Users/mohanselva/Documents/whatsapp-MERN/client/src/api/usersApi.js"],"sourcesContent":["import * as Api from \"./Api\";\n\nexport const getUserDetail = (userId) => {\n    const url = `/users/singleuser/${userId}`;\n    return GetRequest(url);\n}\nexport const getUsersByName = (searchString) => {\n  const url = `/users/search/${searchString}`;\n  return GetWithCancel(url);\n};\n\nexport const updateUserById = (userId, user) => {\n const url = `/users/updateuser/${userId}`;\n return PutRequest(url,user);\n}\nexport const getUserIdByEmail = (email) => {\n  const url = `/users/getidbyemail/${email}`;\n  return GetRequest(url);\n}\n\nconst GetRequest = (url) => {\n  return new Promise(function (resolve, reject) {\n    const obj = {\n      url: url,\n      onSuccess: (resp) => {\n        resolve(resp);\n      },\n      onError: (err) => {\n        reject(err);\n        console.log(\"api error\", err);\n      },\n    };\n    Api.get(obj.url, obj.onSuccess, obj.onError);\n  });\n};\n\nconst PutRequest = (url, data) => {\n  return new Promise(function (resolve, reject) {\n    const obj = {\n      url: url,\n      data: data,\n      onSuccess: (resp) => {\n        resolve(resp);\n      },\n      onError: (err) => {\n        reject(err);\n        console.log(\"api error\", err);\n      },\n    };\n    Api.put(obj.url, obj.data, obj.onSuccess, obj.onError);\n  });\n};\n\n\nfunction PostRequest(url ,data){\n  return new Promise(function(resolve,reject){\n\n      let obj = {\n          url : url ,\n          data : data,\n          onSuccess: (resp)=>{\n              resolve(resp);\n          },\n          onError:(err) =>{\n              reject(err);\n              console.log('api error' , err);\n          }\n      }\n\n      Api.post(obj.url,obj.data,obj.onSuccess,obj.onError);\n\n  });\n}\n\nfunction DeleteRequest(url) {\n  return new Promise(function (resolve, reject) {\n\n      let obj = {\n          url: url,\n          onSuccess: (resp) => {\n              resolve(resp);\n          },\n          onError: (err) => {\n              reject(err);\n              console.log('api error', err);\n          }\n      }\n\n      Api.deleteApi(obj.url, obj.onSuccess, obj.onError);\n\n  });\n}\n\nconst GetWithCancel = (url) => {\n  return new Promise(function (resolve, reject) {\n    const obj = {\n      url: url,\n      onSuccess: (resp) => {\n        resolve(resp);\n      },\n      onError: (err) => {\n        reject(err);\n        console.log(\"api error\", err);\n      },\n    };\n    Api.getWithCancel(obj.url, obj.onSuccess, obj.onError);\n  });\n};\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}