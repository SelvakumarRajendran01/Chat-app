{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport ReduxThunk from 'redux-thunk';\nimport logger from \"redux-logger\";\nimport systemReducer from \"./reducers/systemReducer\";\nimport userReducer from \"./reducers/userReducer\";\nimport roomReducer from \"./reducers/roomReducer\";\nimport localforage from \"localforage\";\nconst persistConfig = {\n  key: 'root',\n  storage: storage,\n  blacklist: [\"\"]\n};\nlet rootReducer = combineReducers({\n  system: systemReducer,\n  user: userReducer,\n  room: roomReducer\n});\nconst pReducer = persistReducer(persistConfig, rootReducer);\nconst middlewares = [ReduxThunk];\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\nexport const store = createStore(pReducer, applyMiddleware(...middlewares));\nwindow.store = store;\nexport const persistor = persistStore(store);\nwindow.persistor = persistor;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","persistStore","persistReducer","storage","ReduxThunk","logger","systemReducer","userReducer","roomReducer","localforage","persistConfig","key","blacklist","rootReducer","system","user","room","pReducer","middlewares","process","env","NODE_ENV","push","store","window","persistor"],"sources":["/Users/mohanselva/Desktop/Private_Projects/Chat-app/client/src/store/index.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport ReduxThunk from 'redux-thunk';\nimport logger from \"redux-logger\";\nimport systemReducer from \"./reducers/systemReducer\";\nimport userReducer from \"./reducers/userReducer\";\nimport roomReducer from \"./reducers/roomReducer\";\nimport localforage from \"localforage\";\n\n\n\nconst persistConfig = {\n    key: 'root',\n    storage: storage,\n    blacklist:[\"\"],\n};\n\nlet rootReducer = combineReducers({\n  system:systemReducer, \n  user:userReducer,\n  room:roomReducer,\n});\n\nconst pReducer = persistReducer(persistConfig, rootReducer);\n\n\nconst middlewares = [ReduxThunk];\n\nif(process.env.NODE_ENV === \"development\")\n    {\n        middlewares.push(logger); \n        \n    }\n\nexport const store = createStore(pReducer, applyMiddleware(...middlewares));\nwindow.store = store;\nexport const persistor = persistStore(store);\nwindow.persistor = persistor;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACrE,SAASC,YAAY,EAAEC,cAAc,QAAQ,eAAe;AAC5D,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,OAAOC,UAAU,MAAM,aAAa;AACpC,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,aAAa,MAAM,0BAA0B;AACpD,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,WAAW,MAAM,aAAa;AAIrC,MAAMC,aAAa,GAAG;EAClBC,GAAG,EAAE,MAAM;EACXR,OAAO,EAAEA,OAAO;EAChBS,SAAS,EAAC,CAAC,EAAE;AACjB,CAAC;AAED,IAAIC,WAAW,GAAGd,eAAe,CAAC;EAChCe,MAAM,EAACR,aAAa;EACpBS,IAAI,EAACR,WAAW;EAChBS,IAAI,EAACR;AACP,CAAC,CAAC;AAEF,MAAMS,QAAQ,GAAGf,cAAc,CAACQ,aAAa,EAAEG,WAAW,CAAC;AAG3D,MAAMK,WAAW,GAAG,CAACd,UAAU,CAAC;AAEhC,IAAGe,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EACrC;EACIH,WAAW,CAACI,IAAI,CAACjB,MAAM,CAAC;AAE5B;AAEJ,OAAO,MAAMkB,KAAK,GAAGzB,WAAW,CAACmB,QAAQ,EAAEjB,eAAe,CAAC,GAAGkB,WAAW,CAAC,CAAC;AAC3EM,MAAM,CAACD,KAAK,GAAGA,KAAK;AACpB,OAAO,MAAME,SAAS,GAAGxB,YAAY,CAACsB,KAAK,CAAC;AAC5CC,MAAM,CAACC,SAAS,GAAGA,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module"}